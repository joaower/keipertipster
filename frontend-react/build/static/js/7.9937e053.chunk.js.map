{"version":3,"sources":["util/utility.js","components/Betting/adminDashboard/Forecast/Prediction.jsx","components/RedirectPage.jsx","../node_modules/jspdf/dist sync","components/Material-Ui/Table.js","components/Material-Ui/Row.js","components/Material-Ui/Editable.js","components/Betting/adminDashboard/Forecast/CustomPrediction.jsx","components/Betting/adminDashboard/Forecast/AdminDashboardCustomPrediction.jsx"],"names":["Utility","sportValue","typeValue","riskValue","useStyles","makeStyles","theme","bold","fontWeight","dNone","display","icon","color","fontSize","marginTop","marginLeft","cursor","pointerEvents","Prediction","handleClose","props","winner","setWinner","difficulty","setDifficulty","setOdd","imageUrl","uploadFile","setDescription","save","open","location","state","homeTeam","awayTeam","competition","classes","autoHideDuration","onClose","elevation","variant","severity","className","paragraph","container","direction","item","xs","align","name","flexDirection","sm","fullWidth","id","labelId","value","onChange","e","target","label","type","InputLabelProps","shrink","src","component","placeholder","multiline","rows","rowsMax","onClick","RedirectPage","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","tableIcons","Add","forwardRef","ref","AddBox","Check","Clear","ClearAll","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Table","icons","TableBodyRow","rotateIconStyle","isOpen","transform","getElementSize","options","padding","size","this","columns","filter","columnDef","hidden","tableData","groupOrder","sort","a","b","columnOrder","map","index","getFieldValue","data","components","Cell","key","rowData","baseIconSize","actions","isFreeAction","TableCell","style","width","length","actionsCellStyle","Actions","checkboxProps","selectionProps","styles","level","treeDataMaxLevel","Checkbox","checked","stopPropagation","toString","event","onRowSelected","path","CustomIcon","Icon","React","detailPanel","textAlign","IconButton","transition","showDetailPanel","onToggleDetailPanel","panel","render","iconButton","animation","openIcon","disabled","tooltip","Tooltip","title","rowStyle","onRowClick","hasAnyEditingRow","opacity","renderColumns","selection","splice","renderSelectionColumn","actionsColumnIndex","push","renderActions","endPos","isTreeData","childRows","isTreeExpanded","onTreeExpandChanged","detailPanelColumnAlignment","renderDetailPanelColumn","forEach","onEditingCanceled","onEditingApproved","rowProps","TableRow","selected","hover","getStyle","panelIndex","Array","isArray","editing","EditRow","localization","mode","Row","colSpan","defaultProps","Editable","setData","field","lookup","Basketball","Tennis","Soccer","Hockey","Baseball","initialEditValue","cellStyle","maxWidth","headerStyle","editable","onRowAdd","newData","Promise","reject","setTimeout","onRowUpdate","oldData","dataUpdate","onRowDelete","dataDelete","CustomPrediction","useState","setType","risk","setRisk","sport","addFreeBet","fullBody","getTypeValue","getRiskValue","match","MatchRequest","createMatch","then","res","catch","err","noValidate","autoComplete","Grid","alignContent","marginBottom","Select","MenuItem","Button","AdminDashboardCustomPrediction"],"mappings":"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","file":"static/js/7.9937e053.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'http://localhost:1337'\n\nclass Utility {\n  getSportValue(sportValue) {\n    switch (sportValue) {\n      case '1':\n        return 'Tenis'\n      case '2':\n        return 'Basketball'\n      case '3':\n        return 'Soccer'\n      default:\n        return 'default'\n    }\n  }\n\n  getTypeValue(typeValue) {\n    switch (typeValue) {\n      case '1':\n        return 'Simples'\n      case '2':\n        return 'Combinada'\n      default:\n        return 'default'\n    }\n  }\n\n  getRiskValue(riskValue) {\n    switch (riskValue) {\n      case '1':\n        return 'Valor'\n      case '2':\n        return 'Garantida'\n      default:\n        return 'default'\n    }\n  }\n}\nexport default new Utility()\n","import React from 'react'\nimport {\n    Snackbar,\n    Grid,\n    FormControl,\n    Typography,\n    MenuItem,\n    InputLabel,\n    Select,\n    Button,\n    makeStyles,\n} from '@material-ui/core'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { CssTextField } from '../../../Material-Ui/CssTextField'\n\nconst useStyles = makeStyles(theme => ({\n    bold: {\n        fontWeight: 'bold',\n    },\n    dNone: {\n        display: 'none',\n    },\n    icon: {\n        color: '#013328',\n        fontSize: '5rem',\n        marginTop: 'auto',\n        marginLeft: 'auto',\n        cursor: 'pointer',\n        pointerEvents: 'auto',\n    },\n}))\nconst Prediction = ({\n    handleClose,\n    props,\n    winner,\n    setWinner,\n    difficulty,\n    setDifficulty,\n    setOdd,\n    imageUrl,\n    uploadFile,\n    setDescription,\n    save,\n    open,\n}) => {\n    const { homeTeam, awayTeam, competition } = props.location.state\n    const classes = useStyles()\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n    }\n    return (\n        <div>\n            \n            <div>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                >\n                    <Alert onClose={handleClose} severity=\"success\">\n                        You just updated one more green :)\n                        <Typography className={classes.bold} paragraph>\n                            redirecting...\n                        </Typography>\n                    </Alert>\n                </Snackbar>\n                <Grid container direction=\"row\">\n                    <Grid item xs={12}>\n                        <Typography align=\"center\" paragraph>\n                            {`${homeTeam.name} - ${awayTeam.name}`}\n                            <br />\n                            dd/mm - hh/mm\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        direction=\"row\"\n                        xs={12}\n                    >\n                        <SportsSoccerIcon />\n                        <Typography align=\"center\" paragraph>\n                            {`Competition: ${competition.name}`}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </div>\n            <Grid container flexDirection=\"column\">\n                <Grid direction=\"row\" item xs={12}>\n                    <Typography align=\"center\" variant=\"h4\">\n                        Analise\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Winner\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={winner}\n                            onChange={e => setWinner(e.target.value)}\n                        >\n                            <MenuItem value=\"House\">{homeTeam.name}</MenuItem>\n                            <MenuItem value=\"Tie\">Tie</MenuItem>\n                            <MenuItem value=\"Outside\">{awayTeam.name}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6} >\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Difficulty\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={difficulty}\n                            onChange={e => setDifficulty(e.target.value)}\n                        >\n                            <MenuItem value=\"Easy\">Easy</MenuItem>\n                            <MenuItem value=\"Medium\">Medium</MenuItem>\n                            <MenuItem value=\"Hard\">Hard</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <CssTextField\n                        id=\"standard-number\"\n                        label=\"Odd\"\n                        fullWidth\n                        type=\"number\"\n                        onChange={e => setOdd(e.target.value)}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <img src={imageUrl} />\n                    <Button fullWidth variant=\"contained\" component=\"label\">\n                        Upload Proof\n                        <input\n                            type=\"file\"\n                            className={classes.dNone}\n                            onChange={uploadFile}\n                        />\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" align=\"center\">\n                        Description\n                    </Typography>\n                    <CssTextField\n                        placeholder=\"\"\n                        multiline\n                        fullWidth\n                        rows={2}\n                        rowsMax={4}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </Grid>\n\n                <AddCircleIcon\n                    className={classes.icon}\n                    onClick={save}\n                />\n            </Grid>\n        </div>\n    )\n}\n\nexport default Prediction\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nconst RedirectPage = () => {\n    return (\n        <div>\n            <h1>\n                {' '}\n                we had some problem loading this page please click the button to\n                be redirected\n            </h1>\n            <Button variant=\"contained\">Click here</Button>\n        </div>\n    )\n}\n\nexport default RedirectPage\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 424;","import {\n  AddBox,\n  ArrowUpward,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n  Clear,\n  ClearAll,\n  DeleteOutline,\n  Edit,\n  FilterList,\n  FirstPage,\n  LastPage,\n  Remove,\n  SaveAlt,\n  Search,\n  ViewColumn,\n} from '@material-ui/icons'\nimport MaterialTable from 'material-table'\nimport React, { forwardRef } from 'react'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  ClearAll: forwardRef((props, ref) => <ClearAll {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nconst Table = props => <MaterialTable icons={tableIcons} {...props} />\n\nexport default Table\n","import Checkbox from '@material-ui/core/Checkbox'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport PropTypes from 'prop-types'\nimport * as React from 'react'\n/* eslint-enable no-unused-vars */\n\nexport default class TableBodyRow extends React.Component {\n  renderColumns() {\n    const size = this.getElementSize()\n    const mapArr = this.props.columns\n      .filter(\n        columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1)\n      )\n      .sort((a, b) => a.tableData.columnOrder - b.tableData.columnOrder)\n      .map((columnDef, index) => {\n        const value = this.props.getFieldValue(this.props.data, columnDef)\n        return (\n          <this.props.components.Cell\n            size={size}\n            icons={this.props.icons}\n            columnDef={columnDef}\n            value={value}\n            key={\n              'cell-' +\n              this.props.data.tableData.id +\n              '-' +\n              columnDef.tableData.id\n            }\n            rowData={this.props.data}\n          />\n        )\n      })\n    return mapArr\n  }\n\n  renderActions() {\n    const size = this.getElementSize()\n    const baseIconSize = size === 'medium' ? 42 : 26\n    const actions = this.props.actions.filter(a => !a.isFreeAction)\n    return (\n      <TableCell\n        size={size}\n        padding=\"none\"\n        key=\"key-actions-column\"\n        style={{\n          width: baseIconSize * actions.length,\n          padding: '0px 5px',\n          ...this.props.options.actionsCellStyle\n        }}\n      >\n        <div style={{ display: 'flex' }}>\n          <this.props.components.Actions\n            data={this.props.data}\n            actions={actions}\n            components={this.props.components}\n            size={size}\n          />\n        </div>\n      </TableCell>\n    )\n  }\n  renderSelectionColumn() {\n    let checkboxProps = this.props.options.selectionProps || {}\n    if (typeof checkboxProps === 'function') {\n      checkboxProps = checkboxProps(this.props.data)\n    }\n\n    const size = this.getElementSize()\n    const baseIconSize = size === 'medium' ? 42 : 26\n\n    const styles =\n      size === 'medium'\n        ? {\n            marginLeft: this.props.level * 9\n          }\n        : {\n            padding: '4px',\n            marginLeft: 5 + this.props.level * 9\n          }\n\n    return (\n      <TableCell\n        size={this.getElementSize()}\n        padding=\"none\"\n        key=\"key-selection-column\"\n        style={{ width: baseIconSize + 9 * (this.props.treeDataMaxLevel - 1) }}\n      >\n        <Checkbox\n          size={size}\n          checked={this.props.data.tableData.checked === true}\n          onClick={e => e.stopPropagation()}\n          value={this.props.data.tableData.id.toString()}\n          onChange={event =>\n            this.props.onRowSelected(event, this.props.path, this.props.data)\n          }\n          style={styles}\n          {...checkboxProps}\n        />\n      </TableCell>\n    )\n  }\n\n  rotateIconStyle = isOpen => ({\n    transform: isOpen ? 'rotate(90deg)' : 'none'\n  })\n\n  renderDetailPanelColumn() {\n    const CustomIcon = ({ icon, style }) =>\n      typeof icon === 'string' ? (\n        <Icon style={style}>{icon}</Icon>\n      ) : (\n        React.createElement(icon, { style })\n      )\n\n    if (typeof this.props.detailPanel == 'function') {\n      return (\n        <TableCell\n          size={this.getElementSize()}\n          padding=\"none\"\n          key=\"key-detail-panel-column\"\n          style={{ width: 42, textAlign: 'center' }}\n        >\n          <IconButton\n            size={this.getElementSize()}\n            style={{\n              transition: 'all ease 200ms',\n              ...this.rotateIconStyle(this.props.data.tableData.showDetailPanel)\n            }}\n            onClick={event => {\n              this.props.onToggleDetailPanel(\n                this.props.path,\n                this.props.detailPanel\n              )\n              event.stopPropagation()\n            }}\n          >\n            <this.props.icons.DetailPanel />\n          </IconButton>\n        </TableCell>\n      )\n    } else {\n      return (\n        <TableCell\n          size={this.getElementSize()}\n          padding=\"none\"\n          key=\"key-detail-panel-column\"\n        >\n          <div\n            style={{\n              width: 42 * this.props.detailPanel.length,\n              textAlign: 'center',\n              display: 'flex'\n            }}\n          >\n            {this.props.detailPanel.map((panel, index) => {\n              if (typeof panel === 'function') {\n                panel = panel(this.props.data)\n              }\n\n              const isOpen =\n                (this.props.data.tableData.showDetailPanel || '').toString() ===\n                panel.render.toString()\n\n              let iconButton = <this.props.icons.DetailPanel />\n              let animation = true\n              if (isOpen) {\n                if (panel.openIcon) {\n                  iconButton = <CustomIcon icon={panel.openIcon} />\n                  animation = false\n                } else if (panel.icon) {\n                  iconButton = <CustomIcon icon={panel.icon} />\n                }\n              } else if (panel.icon) {\n                iconButton = <CustomIcon icon={panel.icon} />\n                animation = false\n              }\n\n              iconButton = (\n                <IconButton\n                  size={this.getElementSize()}\n                  key={'key-detail-panel-' + index}\n                  style={{\n                    transition: 'all ease 200ms',\n                    ...this.rotateIconStyle(animation && isOpen)\n                  }}\n                  disabled={panel.disabled}\n                  onClick={event => {\n                    this.props.onToggleDetailPanel(\n                      this.props.path,\n                      panel.render\n                    )\n                    event.stopPropagation()\n                  }}\n                >\n                  {iconButton}\n                </IconButton>\n              )\n\n              if (panel.tooltip) {\n                iconButton = (\n                  <Tooltip\n                    key={'key-detail-panel-' + index}\n                    title={panel.tooltip}\n                  >\n                    {iconButton}\n                  </Tooltip>\n                )\n              }\n\n              return iconButton\n            })}\n          </div>\n        </TableCell>\n      )\n    }\n  }\n\n  getStyle(index, level) {\n    let style = {\n      transition: 'all ease 300ms'\n    }\n\n    if (typeof this.props.options.rowStyle === 'function') {\n      style = {\n        ...style,\n        ...this.props.options.rowStyle(this.props.data, index, level)\n      }\n    } else if (this.props.options.rowStyle) {\n      style = {\n        ...style,\n        ...this.props.options.rowStyle\n      }\n    }\n\n    if (this.props.onRowClick) {\n      style.cursor = 'pointer'\n    }\n\n    if (this.props.hasAnyEditingRow) {\n      style.opacity = 0.2\n    }\n\n    return style\n  }\n\n  getElementSize = () => {\n    return this.props.options.padding === 'default' ? 'medium' : 'small'\n  }\n\n  render() {\n    const renderColumns = this.renderColumns()\n    if (this.props.options.selection) {\n      renderColumns.splice(0, 0, this.renderSelectionColumn())\n    }\n    if (\n      this.props.actions &&\n      this.props.actions.filter(a => !a.isFreeAction).length > 0\n    ) {\n      if (this.props.options.actionsColumnIndex === -1) {\n        renderColumns.push(this.renderActions())\n      } else if (this.props.options.actionsColumnIndex >= 0) {\n        let endPos = 0\n        if (this.props.options.selection) {\n          endPos = 1\n        }\n        renderColumns.splice(\n          this.props.options.actionsColumnIndex + endPos,\n          0,\n          this.renderActions()\n        )\n      }\n    }\n\n    if (this.props.isTreeData) {\n      if (\n        this.props.data.tableData.childRows &&\n        this.props.data.tableData.childRows.length > 0\n      ) {\n        renderColumns.splice(\n          0,\n          0,\n          <TableCell\n            size={this.getElementSize()}\n            padding=\"none\"\n            key={'key-tree-data-column'}\n            style={{ width: 48 + 9 * (this.props.treeDataMaxLevel - 2) }}\n          >\n            <IconButton\n              size={this.getElementSize()}\n              style={{\n                transition: 'all ease 200ms',\n                marginLeft: this.props.level * 9,\n                ...this.rotateIconStyle(\n                  this.props.data.tableData.isTreeExpanded\n                )\n              }}\n              onClick={event => {\n                this.props.onTreeExpandChanged(this.props.path, this.props.data)\n                event.stopPropagation()\n              }}\n            >\n              <this.props.icons.DetailPanel />\n            </IconButton>\n          </TableCell>\n        )\n      } else {\n        renderColumns.splice(\n          0,\n          0,\n          <TableCell padding=\"none\" key={'key-tree-data-column'} />\n        )\n      }\n    }\n\n    // Lastly we add detail panel icon\n    if (this.props.detailPanel) {\n      if (this.props.options.detailPanelColumnAlignment === 'right') {\n        renderColumns.push(this.renderDetailPanelColumn())\n      } else {\n        renderColumns.splice(0, 0, this.renderDetailPanelColumn())\n      }\n    }\n\n    this.props.columns\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\n      .forEach(columnDef => {\n        renderColumns.splice(\n          0,\n          0,\n          <TableCell\n            size={this.getElementSize()}\n            padding=\"none\"\n            key={'key-group-cell' + columnDef.tableData.id}\n          />\n        )\n      })\n\n    const {\n      icons,\n      data,\n      columns,\n      components,\n      detailPanel,\n      getFieldValue,\n      isTreeData,\n      onRowClick,\n      onRowSelected,\n      onTreeExpandChanged,\n      onToggleDetailPanel,\n      onEditingCanceled,\n      onEditingApproved,\n      options,\n      hasAnyEditingRow,\n      treeDataMaxLevel,\n      ...rowProps\n    } = this.props\n\n    return (\n      <>\n        <TableRow\n          selected={hasAnyEditingRow}\n          {...rowProps}\n          hover={onRowClick ? true : false}\n          style={this.getStyle(this.props.index, this.props.level)}\n          onClick={event => {\n            onRowClick &&\n              onRowClick(event, this.props.data, panelIndex => {\n                let panel = detailPanel\n                if (Array.isArray(panel)) {\n                  panel = panel[panelIndex || 0].render\n                }\n\n                onToggleDetailPanel(this.props.path, panel)\n              })\n          }}\n        >\n          {renderColumns}\n        </TableRow>\n        {this.props.data.tableData.childRows &&\n          this.props.data.tableData.isTreeExpanded &&\n          this.props.data.tableData.childRows.map((data, index) => {\n            if (data.tableData.editing) {\n              return (\n                <this.props.components.EditRow\n                  columns={this.props.columns.filter(columnDef => {\n                    return !columnDef.hidden\n                  })}\n                  components={this.props.components}\n                  data={data}\n                  icons={this.props.icons}\n                  localization={this.props.localization}\n                  key={index}\n                  mode={data.tableData.editing}\n                  options={this.props.options}\n                  isTreeData={this.props.isTreeData}\n                  detailPanel={this.props.detailPanel}\n                  onEditingCanceled={onEditingCanceled}\n                  onEditingApproved={onEditingApproved}\n                />\n              )\n            } else {\n              return (\n                <this.props.components.Row\n                  {...this.props}\n                  data={data}\n                  index={index}\n                  key={index}\n                  level={this.props.level + 1}\n                  path={[...this.props.path, index]}\n                  onEditingCanceled={onEditingCanceled}\n                  onEditingApproved={onEditingApproved}\n                  hasAnyEditingRow={this.props.hasAnyEditingRow}\n                  treeDataMaxLevel={treeDataMaxLevel}\n                />\n              )\n            }\n          })}\n        {this.props.data.tableData &&\n          this.props.data.tableData.showDetailPanel && (\n            <TableRow\n            // selected={this.props.index % 2 === 0}\n            >\n              <TableCell\n                size={this.getElementSize()}\n                colSpan={renderColumns.length}\n                padding=\"none\"\n              >\n                {this.props.data.tableData.showDetailPanel(this.props.data)}\n              </TableCell>\n            </TableRow>\n          )}\n      </>\n    )\n  }\n}\n\nTableBodyRow.defaultProps = {\n  actions: [],\n  index: 0,\n  data: {},\n  options: {},\n  path: []\n}\n\nTableBodyRow.propTypes = {\n  actions: PropTypes.array,\n  icons: PropTypes.any.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  detailPanel: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n  ]),\n  hasAnyEditingRow: PropTypes.bool,\n  options: PropTypes.object.isRequired,\n  onRowSelected: PropTypes.func,\n  path: PropTypes.arrayOf(PropTypes.number),\n  treeDataMaxLevel: PropTypes.number,\n  getFieldValue: PropTypes.func.isRequired,\n  columns: PropTypes.array,\n  onToggleDetailPanel: PropTypes.func.isRequired,\n  onRowClick: PropTypes.func,\n  onEditingApproved: PropTypes.func,\n  onEditingCanceled: PropTypes.func\n}\n","import React, { useState } from 'react'\nimport Table from './Table'\nimport TableBodyRow from './Row'\n\nconst Editable = ({ data, setData }) => {\n  const columns = [\n    {\n      title: 'Desporto',\n      field: 'sport',\n      lookup: {\n        Basketball: 'Basquetebol',\n        Tennis: 'Tenis',\n        Soccer: 'Futebol',\n        Hockey: 'Hoquei',\n        Baseball: 'Basebol',\n      },\n      initialEditValue: 1,\n      cellStyle: {\n        width: '2rem',\n        maxWidth: '2rem',\n      },\n      headerStyle: {\n        width: '2rem',\n        maxWidth: '2rem',\n      },\n    },\n    {\n      title: 'Competição',\n      field: 'competition',\n      //   initialEditValue: 'initial edit value'\n    },\n    { title: 'Jogo', field: 'match' },\n    { title: 'Odd', field: 'odd', type: 'currency' },\n    { title: 'Data', field: 'date', type: 'datetime' },\n    {\n      title: 'Descrição',\n      field: 'description',\n      align: 'justify',\n      cellStyle: {\n        width: '1000px',\n        maxWidth: '1000px',\n      },\n      headerStyle: {\n        width: '1000px',\n        maxWidth: '1000px',\n      },\n\n      //   lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" },\n    },\n  ]\n  /* const [data, setData] = React.useState([\n    {\n      sport: \"1\",\n      competition: \"Baran\",\n      sport: \"Sporting - Benfica\",\n      date: 63,\n      description: \"Descrição\",\n    },\n  ]); */\n\n  return (\n    <Table\n      // tableRef={this.props.tableRef}\n      title=\"Editable Preview\"\n      options={{\n        selection: true,\n        actionsColumnIndex: -1,\n      }}\n      components={{\n        Row: TableBodyRow,\n      }}\n      columns={columns}\n      data={data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                setData([...data, newData])\n              }\n              resolve()\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const dataUpdate = [...data]\n                const index = oldData.tableData.id\n                dataUpdate[index] = newData\n                setData([...dataUpdate])\n              }\n              resolve()\n            }, 1000)\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const dataDelete = [...data]\n                const index = oldData.tableData.id\n                dataDelete.splice(index, 1)\n                setData([...dataDelete])\n              }\n              resolve()\n            }, 1000)\n          }),\n      }}\n    />\n  )\n}\n\nexport default Editable\n","import React from \"react\";\nimport {\n  Grid,\n  Select,\n  Button,\n  MenuItem\n} from \"@material-ui/core\";\nimport Utility from \"../../../../util/utility\";\nimport MatchRequest from '../../../../requests/matches'\nimport Editable from '../../../Material-Ui/Editable'\n\nconst CustomPrediction = ({\n  winner,\n  sportValue,\n  setDifficulty,\n  difficulty,\n  uploadFile,\n  imageUrl,\n}) => {\n  const [type, setType] = React.useState(1);\n  const [risk, setRisk] = React.useState(1);\n  \n  const [data, setData] = React.useState([\n    { sport: '1', competition: 'Baran', sport: \"Sporting - Benfica\", date: 63, description: \"Descrição\" },\n  ])\n  const handleTypeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setType(event.target.value);\n  };\n\n  const handleRiskChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setRisk(event.target.value);\n  };\n\n  function addFreeBet() {\n    const fullBody = {\n      type: Utility.getTypeValue(type.toString()),\n      risk: Utility.getRiskValue(risk.toString()),\n      match: data\n    }\n    debugger\n    MatchRequest.createMatch(fullBody).then(res => {\n      debugger\n    }).catch(err => {\ndebugger\n    })\n  } \n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <form noValidate autoComplete=\"off\">\n        <Grid container alignContent=\"center\">\n          <Grid\n            style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n            item\n            xs={12}\n            sm={6}\n          >\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={type}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleTypeChange}\n            >\n              <MenuItem value={1}>Simples</MenuItem>\n              <MenuItem value={2}>Combinada</MenuItem>\n            </Select>\n          </Grid>\n          <Grid style={{ marginTop: \"1rem\" }} item xs={12} sm={6}>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={risk}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleRiskChange}\n            >\n              <MenuItem value={1}>Valor</MenuItem>\n              <MenuItem value={2}>Garantida</MenuItem>\n            </Select>\n          </Grid>\n          <Grid style={{ marginBottom: \"1rem\" }} item xs={12}>\n          {/* data={data} setData={setData} */}\n          <Editable  data={data} setData={setData} addFreeBet={addFreeBet} />\n          </Grid>\n          {/* <Grid style={{ marginBottom: \"1rem\" }} item xs={12}>\n            <img src={imageUrl} />\n            <Button fullWidth variant=\"contained\" component=\"label\">\n              <input type=\"file\" onChange={uploadFile} />\n            </Button>\n          </Grid> */}\n          <Grid style={{ marginBottom: \"1rem\" }} item xs={12}>\n            <Button onClick={addFreeBet}>Add</Button>\n            {/* <CssTextField\n              placeholder=\"\"\n              multiline\n              variant=\"outlined\"\n              label=\"Descrição\"\n              fullWidth\n              rows={2}\n              rowsMax={10}\n              //   onChange={(e) => setDescription(e.target.value)}\n            /> */}\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nexport default CustomPrediction;\n","import React, { useState } from \"react\";\nimport MatchRequest from \"../../../../requests/matches\";\nimport { navigate } from \"@reach/router\";\nimport Utility from \"../../../../util/utility\";\nimport Prediction from \"./Prediction\";\nimport RedirectPage from \"../../../RedirectPage\";\nimport CustomPrediction from \"./CustomPrediction\";\nfunction AdminDashboardCustomPrediction(props) {\n  const [winner, setWinner] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [odd, setOdd] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [file, setFile] = useState({});\n  const [open, setOpen] = useState(false);\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function save() {\n    const body = {\n      Title: `${props.location.state.homeTeam.name} - ${props.location.state.awayTeam.name}`,\n      Prevision: false,\n      Difficulty: difficulty,\n      Odd: odd,\n      Description: description,\n      Sport: Utility.getSportValue(props.location.state.sportValue),\n      Winner: winner,\n      Proof: file,\n    };\n    debugger;\n    MatchRequest.createMatch(body)\n      .then((res) => {\n        console.log(res);\n        setOpen(true);\n        setTimeout(() => navigate(\"/spider/dashboard\"), 4000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const uploadFile = (e) => {\n    let file;\n    if (e.target.files !== undefined) {\n      file = e.target.files[0];\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        setImageUrl(reader.result);\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n        setImageUrl(reader.result);\n      } else {\n        setImageUrl(\"\");\n      }\n      setFile(file);\n    }\n  };\n\n  return (\n    <>\n      <CustomPrediction />\n    </>\n  );\n}\n\nexport default AdminDashboardCustomPrediction;\n"],"sourceRoot":""}