{"version":3,"sources":["util/utility.js","../node_modules/@material-ui/icons/SportsSoccer.js","../node_modules/@material-ui/icons/AddCircle.js","components/betting/adminDashboard/Forecast/Prediction.jsx","components/RedirectPage.jsx","components/betting/adminDashboard/Forecast/AdminSingularPrediction.js"],"names":["Utility","sportValue","typeValue","riskValue","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","theme","bold","fontWeight","dNone","display","icon","color","fontSize","marginTop","marginLeft","cursor","pointerEvents","Prediction","handleClose","props","winner","setWinner","difficulty","setDifficulty","setOdd","imageUrl","uploadFile","setDescription","save","open","location","state","homeTeam","awayTeam","competition","classes","Alert","elevation","variant","Snackbar","autoHideDuration","onClose","severity","Typography","className","paragraph","Grid","container","direction","item","xs","align","name","flexDirection","sm","FormControl","fullWidth","InputLabel","id","Select","labelId","onChange","e","target","MenuItem","CssTextField","label","type","InputLabelProps","shrink","src","Button","component","placeholder","multiline","rows","rowsMax","onClick","RedirectPage","AdminSingularPrediction","useState","odd","description","file","setFile","setOpen","setImageUrl","event","reason","undefined","files","reader","FileReader","onloadend","result","readAsDataURL","body","Title","Prevision","Difficulty","Odd","Description","Sport","getSportValue","Winner","Proof","MatchRequest","createMatch","then","res","console","log","setTimeout","navigate","catch","err"],"mappings":"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","file":"static/js/6.ad2e6517.chunk.js","sourcesContent":["\nclass Utility {\n  getSportValue(sportValue) {\n    switch (sportValue) {\n      case '1':\n        return 'Tenis'\n      case '2':\n        return 'Basketball'\n      case '3':\n        return 'Soccer'\n      default:\n        return 'default'\n    }\n  }\n\n  getTypeValue(typeValue) {\n    switch (typeValue) {\n      case '1':\n        return 'Simples'\n      case '2':\n        return 'Combinada'\n      default:\n        return 'default'\n    }\n  }\n\n  getRiskValue(riskValue) {\n    switch (riskValue) {\n      case '1':\n        return 'Valor'\n      case '2':\n        return 'Garantida'\n      default:\n        return 'default'\n    }\n  }\n}\nexport default new Utility()\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 3.3l1.35-.95c1.82.56 3.37 1.76 4.38 3.34l-.39 1.34-1.35.46L13 6.7V5.3zm-3.35-.95L11 5.3v1.4L7.01 9.49l-1.35-.46-.39-1.34c1.01-1.57 2.56-2.77 4.38-3.34zM7.08 17.11l-1.14.1C4.73 15.81 4 13.99 4 12c0-.12.01-.23.02-.35l1-.73 1.38.48 1.46 4.34-.78 1.37zm7.42 2.48c-.79.26-1.63.41-2.5.41s-1.71-.15-2.5-.41l-.69-1.49.64-1.1h5.11l.64 1.11-.7 1.48zM14.27 15H9.73l-1.35-4.02L12 8.44l3.63 2.54L14.27 15zm3.79 2.21l-1.14-.1-.79-1.37 1.46-4.34 1.39-.47 1 .73c.01.11.02.22.02.34 0 1.99-.73 3.81-1.94 5.21z\"\n}), 'SportsSoccer');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import React from 'react'\nimport {\n    Snackbar,\n    Grid,\n    FormControl,\n    Typography,\n    MenuItem,\n    InputLabel,\n    Select,\n    Button,\n    makeStyles,\n} from '@material-ui/core'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { CssTextField } from '../../../Material-Ui/CssTextField'\n\nconst useStyles = makeStyles(theme => ({\n    bold: {\n        fontWeight: 'bold',\n    },\n    dNone: {\n        display: 'none',\n    },\n    icon: {\n        color: '#013328',\n        fontSize: '5rem',\n        marginTop: 'auto',\n        marginLeft: 'auto',\n        cursor: 'pointer',\n        pointerEvents: 'auto',\n    },\n}))\nconst Prediction = ({\n    handleClose,\n    props,\n    winner,\n    setWinner,\n    difficulty,\n    setDifficulty,\n    setOdd,\n    imageUrl,\n    uploadFile,\n    setDescription,\n    save,\n    open,\n}) => {\n    const { homeTeam, awayTeam, competition } = props.location.state\n    const classes = useStyles()\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n    }\n    return (\n        <div>\n            \n            <div>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                >\n                    <Alert onClose={handleClose} severity=\"success\">\n                        You just updated one more green :)\n                        <Typography className={classes.bold} paragraph>\n                            redirecting...\n                        </Typography>\n                    </Alert>\n                </Snackbar>\n                <Grid container direction=\"row\">\n                    <Grid item xs={12}>\n                        <Typography align=\"center\" paragraph>\n                            {`${homeTeam.name} - ${awayTeam.name}`}\n                            <br />\n                            dd/mm - hh/mm\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        direction=\"row\"\n                        xs={12}\n                    >\n                        <SportsSoccerIcon />\n                        <Typography align=\"center\" paragraph>\n                            {`Competition: ${competition.name}`}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </div>\n            <Grid container flexDirection=\"column\">\n                <Grid direction=\"row\" item xs={12}>\n                    <Typography align=\"center\" variant=\"h4\">\n                        Analise\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Winner\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={winner}\n                            onChange={e => setWinner(e.target.value)}\n                        >\n                            <MenuItem value=\"House\">{homeTeam.name}</MenuItem>\n                            <MenuItem value=\"Tie\">Tie</MenuItem>\n                            <MenuItem value=\"Outside\">{awayTeam.name}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6} >\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Difficulty\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={difficulty}\n                            onChange={e => setDifficulty(e.target.value)}\n                        >\n                            <MenuItem value=\"Easy\">Easy</MenuItem>\n                            <MenuItem value=\"Medium\">Medium</MenuItem>\n                            <MenuItem value=\"Hard\">Hard</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <CssTextField\n                        id=\"standard-number\"\n                        label=\"Odd\"\n                        fullWidth\n                        type=\"number\"\n                        onChange={e => setOdd(e.target.value)}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <img src={imageUrl} />\n                    <Button fullWidth variant=\"contained\" component=\"label\">\n                        Upload Proof\n                        <input\n                            type=\"file\"\n                            className={classes.dNone}\n                            onChange={uploadFile}\n                        />\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" align=\"center\">\n                        Description\n                    </Typography>\n                    <CssTextField\n                        placeholder=\"\"\n                        multiline\n                        fullWidth\n                        rows={2}\n                        rowsMax={4}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </Grid>\n\n                <AddCircleIcon\n                    className={classes.icon}\n                    onClick={save}\n                />\n            </Grid>\n        </div>\n    )\n}\n\nexport default Prediction\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nconst RedirectPage = () => {\n    return (\n        <div>\n            <h1>\n                {' '}\n                we had some problem loading this page please click the button to\n                be redirected\n            </h1>\n            <Button variant=\"contained\">Click here</Button>\n        </div>\n    )\n}\n\nexport default RedirectPage\n","import React, { useState } from 'react'\nimport { navigate } from '@reach/router'\nimport MatchRequest from '../../../../requests/matches'\nimport Utility from '../../../../util/utility'\nimport Prediction from './Prediction'\nimport RedirectPage from '../../../RedirectPage'\nfunction AdminSingularPrediction(props) {\n  const [winner, setWinner] = useState('')\n  const [difficulty, setDifficulty] = useState('')\n  const [odd, setOdd] = useState(0)\n  const [description, setDescription] = useState('')\n  const [file, setFile] = useState({})\n  const [open, setOpen] = useState(false)\n  const [imageUrl, setImageUrl] = useState('')\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  function save() {\n    const body = {\n      Title: `${props.location.state.homeTeam.name} - ${props.location.state.awayTeam.name}`,\n      Prevision: false,\n      Difficulty: difficulty,\n      Odd: odd,\n      Description: description,\n      Sport: Utility.getSportValue(props.location.state.sportValue),\n      Winner: winner,\n      Proof: file,\n    }\n    debugger\n    MatchRequest.createMatch(body)\n      .then(res => {\n        console.log(res)\n        setOpen(true)\n        setTimeout(() => navigate('/spider/dashboard'), 4000)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const uploadFile = e => {\n    let file\n    if (e.target.files !== undefined) {\n      file = e.target.files[0]\n      const reader = new FileReader()\n\n      reader.onloadend = () => {\n        setImageUrl(reader.result)\n      }\n      if (file) {\n        reader.readAsDataURL(file)\n        setImageUrl(reader.result)\n      } else {\n        setImageUrl('')\n      }\n      setFile(file)\n    }\n  }\n\n  return (\n    <>\n      {props.location.state !== null ? (\n        <Prediction\n          props={props}\n          handleClose={handleClose}\n          winner={winner}\n          setWinner={setWinner}\n          difficulty={difficulty}\n          setDifficulty={setDifficulty}\n          setOdd={setOdd}\n          imageUrl={imageUrl}\n          uploadFile={uploadFile}\n          setDescription={setDescription}\n          save={save}\n          open={open}\n        />\n      ) : (\n        <RedirectPage />\n      )}\n    </>\n  )\n}\n\nexport default AdminSingularPrediction\n"],"sourceRoot":""}