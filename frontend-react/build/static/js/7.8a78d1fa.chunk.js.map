{"version":3,"sources":["util/utility.js","../node_modules/jspdf/dist sync","components/Material-Ui/Table.js","components/Material-Ui/Row.js","components/Material-Ui/Editable.js","components/betting/adminDashboard/Forecast/CustomPrediction.jsx","components/betting/adminDashboard/Forecast/AdminDashboardCustomPrediction.jsx"],"names":["Utility","sportValue","typeValue","riskValue","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","tableIcons","Add","forwardRef","props","ref","AddBox","Check","Clear","ClearAll","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Table","icons","TableBodyRow","rotateIconStyle","isOpen","transform","getElementSize","options","padding","size","this","columns","filter","columnDef","hidden","tableData","groupOrder","sort","a","b","columnOrder","map","index","value","getFieldValue","data","components","Cell","key","rowData","baseIconSize","actions","isFreeAction","TableCell","style","width","length","actionsCellStyle","display","Actions","checkboxProps","selectionProps","styles","marginLeft","level","treeDataMaxLevel","Checkbox","checked","onClick","stopPropagation","toString","onChange","event","onRowSelected","path","CustomIcon","icon","Icon","React","detailPanel","textAlign","IconButton","transition","showDetailPanel","onToggleDetailPanel","panel","render","iconButton","animation","openIcon","disabled","tooltip","Tooltip","title","rowStyle","onRowClick","cursor","hasAnyEditingRow","opacity","renderColumns","selection","splice","renderSelectionColumn","actionsColumnIndex","push","renderActions","endPos","isTreeData","childRows","isTreeExpanded","onTreeExpandChanged","detailPanelColumnAlignment","renderDetailPanelColumn","forEach","onEditingCanceled","onEditingApproved","rowProps","TableRow","selected","hover","getStyle","panelIndex","Array","isArray","editing","EditRow","localization","mode","Row","colSpan","defaultProps","Editable","setData","field","lookup","Basquetebol","Tennis","Soccer","Hockey","Baseball","initialEditValue","cellStyle","maxWidth","headerStyle","type","align","editable","onRowAdd","newData","Promise","reject","setTimeout","onRowUpdate","oldData","dataUpdate","onRowDelete","dataDelete","CustomPrediction","useState","setType","risk","setRisk","open","setOpen","color","useStylesColor","Alert","elevation","variant","addFreeBet","fullBody","getTypeValue","getRiskValue","match","MatchRequest","createMatch","then","res","navigate","catch","err","noValidate","autoComplete","Snackbar","autoHideDuration","onClose","severity","Typography","paragraph","Grid","container","alignContent","marginTop","marginBottom","item","xs","sm","Select","labelId","fullWidth","target","MenuItem","justify","Fab","className","tGrey","green","aria-label","AdminDashboardCustomPrediction"],"mappings":"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","file":"static/js/7.8a78d1fa.chunk.js","sourcesContent":["\nclass Utility {\n  getSportValue(sportValue) {\n    switch (sportValue) {\n      case '1':\n        return 'Tenis'\n      case '2':\n        return 'Basketball'\n      case '3':\n        return 'Soccer'\n      default:\n        return 'default'\n    }\n  }\n\n  getTypeValue(typeValue) {\n    switch (typeValue) {\n      case '1':\n        return 'Simples'\n      case '2':\n        return 'Combinada'\n      default:\n        return 'default'\n    }\n  }\n\n  getRiskValue(riskValue) {\n    switch (riskValue) {\n      case '1':\n        return 'Valor'\n      case '2':\n        return 'Garantida'\n      default:\n        return 'default'\n    }\n  }\n}\nexport default new Utility()\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 431;","import {\n  AddBox,\n  ArrowUpward,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n  Clear,\n  ClearAll,\n  DeleteOutline,\n  Edit,\n  FilterList,\n  FirstPage,\n  LastPage,\n  Remove,\n  SaveAlt,\n  Search,\n  ViewColumn,\n} from '@material-ui/icons'\nimport MaterialTable from 'material-table'\nimport React, { forwardRef } from 'react'\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  ClearAll: forwardRef((props, ref) => <ClearAll {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n}\n\nconst Table = props => <MaterialTable icons={tableIcons} {...props} />\n\nexport default Table\n","import Checkbox from '@material-ui/core/Checkbox'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow'\nimport IconButton from '@material-ui/core/IconButton'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport PropTypes from 'prop-types'\nimport * as React from 'react'\n/* eslint-enable no-unused-vars */\n\nexport default class TableBodyRow extends React.Component {\n  renderColumns() {\n    const size = this.getElementSize()\n    const mapArr = this.props.columns\n      .filter(\n        columnDef => !columnDef.hidden && !(columnDef.tableData.groupOrder > -1)\n      )\n      .sort((a, b) => a.tableData.columnOrder - b.tableData.columnOrder)\n      .map((columnDef, index) => {\n        const value = this.props.getFieldValue(this.props.data, columnDef)\n        return (\n          <this.props.components.Cell\n            size={size}\n            icons={this.props.icons}\n            columnDef={columnDef}\n            value={value}\n            key={\n              'cell-' +\n              this.props.data.tableData.id +\n              '-' +\n              columnDef.tableData.id\n            }\n            rowData={this.props.data}\n          />\n        )\n      })\n    return mapArr\n  }\n\n  renderActions() {\n    const size = this.getElementSize()\n    const baseIconSize = size === 'medium' ? 42 : 26\n    const actions = this.props.actions.filter(a => !a.isFreeAction)\n    return (\n      <TableCell\n        size={size}\n        padding=\"none\"\n        key=\"key-actions-column\"\n        style={{\n          width: baseIconSize * actions.length,\n          padding: '0px 5px',\n          ...this.props.options.actionsCellStyle\n        }}\n      >\n        <div style={{ display: 'flex' }}>\n          <this.props.components.Actions\n            data={this.props.data}\n            actions={actions}\n            components={this.props.components}\n            size={size}\n          />\n        </div>\n      </TableCell>\n    )\n  }\n  renderSelectionColumn() {\n    let checkboxProps = this.props.options.selectionProps || {}\n    if (typeof checkboxProps === 'function') {\n      checkboxProps = checkboxProps(this.props.data)\n    }\n\n    const size = this.getElementSize()\n    const baseIconSize = size === 'medium' ? 42 : 26\n\n    const styles =\n      size === 'medium'\n        ? {\n            marginLeft: this.props.level * 9\n          }\n        : {\n            padding: '4px',\n            marginLeft: 5 + this.props.level * 9\n          }\n\n    return (\n      <TableCell\n        size={this.getElementSize()}\n        padding=\"none\"\n        key=\"key-selection-column\"\n        style={{ width: baseIconSize + 9 * (this.props.treeDataMaxLevel - 1) }}\n      >\n        <Checkbox\n          size={size}\n          checked={this.props.data.tableData.checked === true}\n          onClick={e => e.stopPropagation()}\n          value={this.props.data.tableData.id.toString()}\n          onChange={event =>\n            this.props.onRowSelected(event, this.props.path, this.props.data)\n          }\n          style={styles}\n          {...checkboxProps}\n        />\n      </TableCell>\n    )\n  }\n\n  rotateIconStyle = isOpen => ({\n    transform: isOpen ? 'rotate(90deg)' : 'none'\n  })\n\n  renderDetailPanelColumn() {\n    const CustomIcon = ({ icon, style }) =>\n      typeof icon === 'string' ? (\n        <Icon style={style}>{icon}</Icon>\n      ) : (\n        React.createElement(icon, { style })\n      )\n\n    if (typeof this.props.detailPanel == 'function') {\n      return (\n        <TableCell\n          size={this.getElementSize()}\n          padding=\"none\"\n          key=\"key-detail-panel-column\"\n          style={{ width: 42, textAlign: 'center' }}\n        >\n          <IconButton\n            size={this.getElementSize()}\n            style={{\n              transition: 'all ease 200ms',\n              ...this.rotateIconStyle(this.props.data.tableData.showDetailPanel)\n            }}\n            onClick={event => {\n              this.props.onToggleDetailPanel(\n                this.props.path,\n                this.props.detailPanel\n              )\n              event.stopPropagation()\n            }}\n          >\n            <this.props.icons.DetailPanel />\n          </IconButton>\n        </TableCell>\n      )\n    } else {\n      return (\n        <TableCell\n          size={this.getElementSize()}\n          padding=\"none\"\n          key=\"key-detail-panel-column\"\n        >\n          <div\n            style={{\n              width: 42 * this.props.detailPanel.length,\n              textAlign: 'center',\n              display: 'flex'\n            }}\n          >\n            {this.props.detailPanel.map((panel, index) => {\n              if (typeof panel === 'function') {\n                panel = panel(this.props.data)\n              }\n\n              const isOpen =\n                (this.props.data.tableData.showDetailPanel || '').toString() ===\n                panel.render.toString()\n\n              let iconButton = <this.props.icons.DetailPanel />\n              let animation = true\n              if (isOpen) {\n                if (panel.openIcon) {\n                  iconButton = <CustomIcon icon={panel.openIcon} />\n                  animation = false\n                } else if (panel.icon) {\n                  iconButton = <CustomIcon icon={panel.icon} />\n                }\n              } else if (panel.icon) {\n                iconButton = <CustomIcon icon={panel.icon} />\n                animation = false\n              }\n\n              iconButton = (\n                <IconButton\n                  size={this.getElementSize()}\n                  key={'key-detail-panel-' + index}\n                  style={{\n                    transition: 'all ease 200ms',\n                    ...this.rotateIconStyle(animation && isOpen)\n                  }}\n                  disabled={panel.disabled}\n                  onClick={event => {\n                    this.props.onToggleDetailPanel(\n                      this.props.path,\n                      panel.render\n                    )\n                    event.stopPropagation()\n                  }}\n                >\n                  {iconButton}\n                </IconButton>\n              )\n\n              if (panel.tooltip) {\n                iconButton = (\n                  <Tooltip\n                    key={'key-detail-panel-' + index}\n                    title={panel.tooltip}\n                  >\n                    {iconButton}\n                  </Tooltip>\n                )\n              }\n\n              return iconButton\n            })}\n          </div>\n        </TableCell>\n      )\n    }\n  }\n\n  getStyle(index, level) {\n    let style = {\n      transition: 'all ease 300ms'\n    }\n\n    if (typeof this.props.options.rowStyle === 'function') {\n      style = {\n        ...style,\n        ...this.props.options.rowStyle(this.props.data, index, level)\n      }\n    } else if (this.props.options.rowStyle) {\n      style = {\n        ...style,\n        ...this.props.options.rowStyle\n      }\n    }\n\n    if (this.props.onRowClick) {\n      style.cursor = 'pointer'\n    }\n\n    if (this.props.hasAnyEditingRow) {\n      style.opacity = 0.2\n    }\n\n    return style\n  }\n\n  getElementSize = () => {\n    return this.props.options.padding === 'default' ? 'medium' : 'small'\n  }\n\n  render() {\n    const renderColumns = this.renderColumns()\n    if (this.props.options.selection) {\n      renderColumns.splice(0, 0, this.renderSelectionColumn())\n    }\n    if (\n      this.props.actions &&\n      this.props.actions.filter(a => !a.isFreeAction).length > 0\n    ) {\n      if (this.props.options.actionsColumnIndex === -1) {\n        renderColumns.push(this.renderActions())\n      } else if (this.props.options.actionsColumnIndex >= 0) {\n        let endPos = 0\n        if (this.props.options.selection) {\n          endPos = 1\n        }\n        renderColumns.splice(\n          this.props.options.actionsColumnIndex + endPos,\n          0,\n          this.renderActions()\n        )\n      }\n    }\n\n    if (this.props.isTreeData) {\n      if (\n        this.props.data.tableData.childRows &&\n        this.props.data.tableData.childRows.length > 0\n      ) {\n        renderColumns.splice(\n          0,\n          0,\n          <TableCell\n            size={this.getElementSize()}\n            padding=\"none\"\n            key={'key-tree-data-column'}\n            style={{ width: 48 + 9 * (this.props.treeDataMaxLevel - 2) }}\n          >\n            <IconButton\n              size={this.getElementSize()}\n              style={{\n                transition: 'all ease 200ms',\n                marginLeft: this.props.level * 9,\n                ...this.rotateIconStyle(\n                  this.props.data.tableData.isTreeExpanded\n                )\n              }}\n              onClick={event => {\n                this.props.onTreeExpandChanged(this.props.path, this.props.data)\n                event.stopPropagation()\n              }}\n            >\n              <this.props.icons.DetailPanel />\n            </IconButton>\n          </TableCell>\n        )\n      } else {\n        renderColumns.splice(\n          0,\n          0,\n          <TableCell padding=\"none\" key={'key-tree-data-column'} />\n        )\n      }\n    }\n\n    // Lastly we add detail panel icon\n    if (this.props.detailPanel) {\n      if (this.props.options.detailPanelColumnAlignment === 'right') {\n        renderColumns.push(this.renderDetailPanelColumn())\n      } else {\n        renderColumns.splice(0, 0, this.renderDetailPanelColumn())\n      }\n    }\n\n    this.props.columns\n      .filter(columnDef => columnDef.tableData.groupOrder > -1)\n      .forEach(columnDef => {\n        renderColumns.splice(\n          0,\n          0,\n          <TableCell\n            size={this.getElementSize()}\n            padding=\"none\"\n            key={'key-group-cell' + columnDef.tableData.id}\n          />\n        )\n      })\n\n    const {\n      icons,\n      data,\n      columns,\n      components,\n      detailPanel,\n      getFieldValue,\n      isTreeData,\n      onRowClick,\n      onRowSelected,\n      onTreeExpandChanged,\n      onToggleDetailPanel,\n      onEditingCanceled,\n      onEditingApproved,\n      options,\n      hasAnyEditingRow,\n      treeDataMaxLevel,\n      ...rowProps\n    } = this.props\n\n    return (\n      <>\n        <TableRow\n          selected={hasAnyEditingRow}\n          {...rowProps}\n          hover={onRowClick ? true : false}\n          style={this.getStyle(this.props.index, this.props.level)}\n          onClick={event => {\n            onRowClick &&\n              onRowClick(event, this.props.data, panelIndex => {\n                let panel = detailPanel\n                if (Array.isArray(panel)) {\n                  panel = panel[panelIndex || 0].render\n                }\n\n                onToggleDetailPanel(this.props.path, panel)\n              })\n          }}\n        >\n          {renderColumns}\n        </TableRow>\n        {this.props.data.tableData.childRows &&\n          this.props.data.tableData.isTreeExpanded &&\n          this.props.data.tableData.childRows.map((data, index) => {\n            if (data.tableData.editing) {\n              return (\n                <this.props.components.EditRow\n                  columns={this.props.columns.filter(columnDef => {\n                    return !columnDef.hidden\n                  })}\n                  components={this.props.components}\n                  data={data}\n                  icons={this.props.icons}\n                  localization={this.props.localization}\n                  key={index}\n                  mode={data.tableData.editing}\n                  options={this.props.options}\n                  isTreeData={this.props.isTreeData}\n                  detailPanel={this.props.detailPanel}\n                  onEditingCanceled={onEditingCanceled}\n                  onEditingApproved={onEditingApproved}\n                />\n              )\n            } else {\n              return (\n                <this.props.components.Row\n                  {...this.props}\n                  data={data}\n                  index={index}\n                  key={index}\n                  level={this.props.level + 1}\n                  path={[...this.props.path, index]}\n                  onEditingCanceled={onEditingCanceled}\n                  onEditingApproved={onEditingApproved}\n                  hasAnyEditingRow={this.props.hasAnyEditingRow}\n                  treeDataMaxLevel={treeDataMaxLevel}\n                />\n              )\n            }\n          })}\n        {this.props.data.tableData &&\n          this.props.data.tableData.showDetailPanel && (\n            <TableRow\n            // selected={this.props.index % 2 === 0}\n            >\n              <TableCell\n                size={this.getElementSize()}\n                colSpan={renderColumns.length}\n                padding=\"none\"\n              >\n                {this.props.data.tableData.showDetailPanel(this.props.data)}\n              </TableCell>\n            </TableRow>\n          )}\n      </>\n    )\n  }\n}\n\nTableBodyRow.defaultProps = {\n  actions: [],\n  index: 0,\n  data: {},\n  options: {},\n  path: []\n}\n\nTableBodyRow.propTypes = {\n  actions: PropTypes.array,\n  icons: PropTypes.any.isRequired,\n  index: PropTypes.number.isRequired,\n  data: PropTypes.object.isRequired,\n  detailPanel: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n  ]),\n  hasAnyEditingRow: PropTypes.bool,\n  options: PropTypes.object.isRequired,\n  onRowSelected: PropTypes.func,\n  path: PropTypes.arrayOf(PropTypes.number),\n  treeDataMaxLevel: PropTypes.number,\n  getFieldValue: PropTypes.func.isRequired,\n  columns: PropTypes.array,\n  onToggleDetailPanel: PropTypes.func.isRequired,\n  onRowClick: PropTypes.func,\n  onEditingApproved: PropTypes.func,\n  onEditingCanceled: PropTypes.func\n}\n","import React from 'react'\nimport Table from './Table'\nimport TableBodyRow from './Row'\n\nconst Editable = ({ data, setData }) => {\n  const columns = [\n    {\n      title: 'Desporto',\n      field: 'sport',\n      lookup: {\n        Basquetebol: 'Basquetebol',\n        Tennis: 'Tenis',\n        Soccer: 'Futebol',\n        Hockey: 'Hoquei',\n        Baseball: 'Basebol',\n      },\n      initialEditValue: 1,\n      cellStyle: {\n        width: '2rem',\n        maxWidth: '2rem',\n      },\n      headerStyle: {\n        width: '2rem',\n        maxWidth: '2rem',\n      },\n    },\n    {\n      title: 'Competição',\n      field: 'competition',\n      //   initialEditValue: 'initial edit value'\n    },\n    { title: 'Jogo', field: 'match' },\n    { title: 'Odd', field: 'odd', type: 'currency' },\n    { title: 'Data', field: 'date', type: 'datetime' },\n    {\n      title: 'Descrição',\n      field: 'description',\n      align: 'justify',\n      cellStyle: {\n        width: '1000px',\n        maxWidth: '1000px',\n      },\n      headerStyle: {\n        width: '1000px',\n        maxWidth: '1000px',\n      },\n\n      //   lookup: { 34: \"İstanbul\", 63: \"Şanlıurfa\" },\n    },\n  ]\n  /* const [data, setData] = React.useState([\n    {\n      sport: \"1\",\n      competition: \"Baran\",\n      sport: \"Sporting - Benfica\",\n      date: 63,\n      description: \"Descrição\",\n    },\n  ]); */\n\n  return (\n    <Table\n      // tableRef={this.props.tableRef}\n      title=\"Editable Preview\"\n      options={{\n        selection: true,\n        actionsColumnIndex: -1,\n      }}\n      components={{\n        Row: TableBodyRow,\n      }}\n      columns={columns}\n      data={data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                setData([...data, newData])\n              }\n              resolve()\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const dataUpdate = [...data]\n                const index = oldData.tableData.id\n                dataUpdate[index] = newData\n                setData([...dataUpdate])\n              }\n              resolve()\n            }, 1000)\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              {\n                const dataDelete = [...data]\n                const index = oldData.tableData.id\n                dataDelete.splice(index, 1)\n                setData([...dataDelete])\n              }\n              resolve()\n            }, 1000)\n          }),\n      }}\n    />\n  )\n}\n\nexport default Editable\n","import React from 'react'\nimport {\n  Grid,\n  Select,\n  MenuItem,\n  Fab,\n  Snackbar,\n  Typography,\n} from '@material-ui/core'\nimport Utility from '../../../../util/utility'\nimport MatchRequest from '../../../../requests/matches'\nimport Editable from '../../../Material-Ui/Editable'\nimport AddIcon from '@material-ui/icons/Add'\nimport { useStylesColor } from '../../../../components/style'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { navigate } from '@reach/router'\n\nconst CustomPrediction = ({}) => {\n  const [type, setType] = React.useState(1)\n  const [risk, setRisk] = React.useState(1)\n\n  const [data, setData] = React.useState([])\n  const [open, setOpen] = React.useState(false)\n  const color = useStylesColor()\n  const handleTypeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setType(event.target.value)\n  }\n\n  const handleRiskChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setRisk(event.target.value)\n  }\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  }\n  function addFreeBet() {\n    const fullBody = {\n      type: Utility.getTypeValue(type.toString()),\n      risk: Utility.getRiskValue(risk.toString()),\n      match: data,\n    }\n    debugger\n    MatchRequest.createMatch(fullBody)\n      .then(res => {\n        debugger\n\n        setOpen(true)\n        setTimeout(() => navigate('/spider/dashboard'), 4000)\n      })\n      .catch(err => {\n        debugger\n      })\n  }\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <form noValidate autoComplete=\"off\">\n        <Snackbar\n          open={open}\n          autoHideDuration={6000}\n          onClose={() => setOpen(false)}\n        >\n          <Alert onClose={() => setOpen(false)} severity=\"success\">\n            Acabaste de adicionar uma aposta nova, vai relembrar no telegram!\n            <Typography paragraph>A redirecionar ...</Typography>\n          </Alert>\n        </Snackbar>\n        <Grid container alignContent=\"center\">\n          <Grid\n            style={{ marginTop: '1rem', marginBottom: '1rem' }}\n            item\n            xs={12}\n            sm={6}\n          >\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={type}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleTypeChange}\n            >\n              <MenuItem value={1}>Simples</MenuItem>\n              <MenuItem value={2}>Combinada</MenuItem>\n            </Select>\n          </Grid>\n          <Grid style={{ marginTop: '1rem' }} item xs={12} sm={6}>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={risk}\n              fullWidth\n              variant=\"outlined\"\n              onChange={handleRiskChange}\n            >\n              <MenuItem value={1}>Valor</MenuItem>\n              <MenuItem value={2}>Garantida</MenuItem>\n            </Select>\n          </Grid>\n          <Grid style={{ marginBottom: '1rem' }} item xs={12}>\n            {/* data={data} setData={setData} */}\n            <Editable data={data} setData={setData} addFreeBet={addFreeBet} />\n          </Grid>\n          {/* <Grid style={{ marginBottom: \"1rem\" }} item xs={12}>\n            <img src={imageUrl} />\n            <Button fullWidth variant=\"contained\" component=\"label\">\n              <input type=\"file\" onChange={uploadFile} />\n            </Button>\n          </Grid> */}\n          <Grid item xs={12}>\n            <Grid container style={{ marginTop: '3rem' }} justify=\"center\">\n              <Grid item align=\"center\">\n                <Fab\n                  align=\"center\"\n                  onClick={addFreeBet}\n                  size=\"large\"\n                  variant=\"extended\"\n                  className={`${color.tGrey} ${color.green}`}\n                  aria-label=\"add\"\n                >\n                  <AddIcon />\n                  Adicionar green\n                </Fab>\n              </Grid>\n            </Grid>\n            {/* <CssTextField\n              placeholder=\"\"\n              multiline\n              variant=\"outlined\"\n              label=\"Descrição\"\n              fullWidth\n              rows={2}\n              rowsMax={10}\n              //   onChange={(e) => setDescription(e.target.value)}\n            /> */}\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  )\n}\n\nexport default CustomPrediction\n","import React from \"react\";\nimport CustomPrediction from \"./CustomPrediction\";\nfunction AdminDashboardCustomPrediction(props) {\n  \n\n  /* function save() {\n    const body = {\n      Title: `${props.location.state.homeTeam.name} - ${props.location.state.awayTeam.name}`,\n      Prevision: false,\n      Difficulty: difficulty,\n      Odd: odd,\n      Description: description,\n      Sport: Utility.getSportValue(props.location.state.sportValue),\n      Winner: winner,\n      Proof: file,\n    };\n    debugger;\n    MatchRequest.createMatch(body)\n      .then((res) => {\n        console.log(res);\n        setOpen(true);\n        setTimeout(() => navigate(\"/spider/dashboard\"), 4000);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  } */\n\n  /* const uploadFile = (e) => {\n    let file;\n    if (e.target.files !== undefined) {\n      file = e.target.files[0];\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        setImageUrl(reader.result);\n      };\n      if (file) {\n        reader.readAsDataURL(file);\n        setImageUrl(reader.result);\n      } else {\n        setImageUrl(\"\");\n      }\n      setFile(file);\n    }\n  }; */\n\n  return (\n    <>\n      <CustomPrediction />\n    </>\n  );\n}\n\nexport default AdminDashboardCustomPrediction;\n"],"sourceRoot":""}