{"version":3,"sources":["requests/node/basketball.js","components/betting/adminDashboard/Forecast/ForecastDashboard/AdminDashboardHeader.jsx","components/card/CustomCard.jsx","components/betting/adminDashboard/Forecast/ForecastDashboard/AdminToPredictMatches.jsx","components/card/PredictedCard.jsx","components/betting/adminDashboard/Forecast/ForecastDashboard/AdminPredictedMatches.jsx","components/betting/adminDashboard/Forecast/ForecastDashboard/aDashboard.js"],"names":["axios","get","headers","ADashboardHeader","classes","Grid","container","direction","item","xs","Paper","className","paper1","Typography","variant","propType","PropTypes","object","CustomCard","sportValue","useStylesCard","color","useStylesColor","Card","root","green","style","padding","marginTop","marginBottom","CardContent","cardFather","displayTournament","tGrey","displayCompetitors","buttons","to","state","tOrange","AdminToPredictMatches","React","useState","value","setValue","theme","useTheme","TabPanel","props","children","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","md","title","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","TabIndicatorProps","background","Tab","tGreen","label","axis","onChangeIndex","useStyles","makeStyles","display","rootTest","width","backgroundColor","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","left","marginLeft","PredictedCard","handleClose","open","handleDelete","removeAlreadyDataFromState","data","type","match","createdAt","combinedOdd","reduce","a","b","odd","Alert","elevation","addStatistic","e","preventDefault","body","StatRequest","createStat","then","res","status","MatchRequest","deleteMatchById","resp","Snackbar","autoHideDuration","onClose","grey","severity","component","Date","getDate","getHours","length","map","alignContent","IconButton","onClick","handleClick","Divider","AdminPredictedMatches","alreadyData","paper","flexGrow","textAlign","palette","text","primary","margin","fontFamily","valueSport","desc","valueDay","DashBoard","setData","setAlreadyData","setSportValue","dayValue","setDayValue","filter","useEffect","getMatches","catch","err","console","log","message","setOpen","AdminDashboardHeader","handleSportChange","target","BasketballRequest","getToday","response","handleDayChange","reason"],"mappings":"kRAee,M,mGARX,OAAOA,IAAMC,IAAN,UALK,wBAKL,qBAAyC,CAC9CC,QAAS,CACP,eAAgB,0B,+BCLlBC,EAAmB,SAAC,GAAD,IACvBC,EADuB,EACvBA,QADuB,OAGvB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACxB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,CAAOC,UAAWP,EAAQQ,QACxB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,wDAGA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,kDAQRX,EAAiBY,SAAW,CAC1BX,Q,OAASY,EAAUC,QAGNd,Q,gGCqBAe,EAzCI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACdf,EAAUgB,cACVC,EAAQC,cACd,OACE,kBAACC,EAAA,EAAD,CACEZ,UAAS,UAAKP,EAAQoB,KAAb,YAAqBH,EAAMI,OACpCC,MAAO,CAAEC,QAAS,OAAQC,UAAW,OAAQC,aAAc,SAE3D,kBAACC,EAAA,EAAD,CAAanB,UAAWP,EAAQ2B,YAC9B,yBAAKpB,UAAWP,EAAQ4B,mBAEtB,kBAACnB,EAAA,EAAD,CAAYC,QAAQ,WAAWH,UAAWU,EAAMY,OAAhD,gBAIF,yBAAKtB,UAAWP,EAAQ8B,oBACtB,6BAEF,yBAAKvB,UAAWP,EAAQ8B,qBAQxB,yBAAKvB,UAAWP,EAAQ+B,SACtB,kBAAC,IAAD,CACEC,GAAG,2BACHC,MAAO,CACLlB,eAGF,kBAACN,EAAA,EAAD,CAAYF,UAAWU,EAAMiB,SAA7B,eCuEGC,EAnGe,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EACnBoC,IAAMC,SAAS,GADI,mBACtCC,EADsC,KAC/BC,EAD+B,KAEvCtB,EAAQC,cASRsB,EAAQC,cACd,SAASC,EAASC,GAAuB,IAErCC,EACED,EADFC,SAAUN,EACRK,EADQL,MAAOO,EACfF,EADeE,MAAUC,EAFS,YAGlCH,EAHkC,8BAKtC,OACE,uCACEI,KAAK,WACLC,OAAQV,IAAUO,EAClBI,GAAE,8BAAyBJ,GAC3BK,kBAAA,yBAAmCL,IAC/BC,GAEHR,IAAUO,GACT,kBAACM,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC3C,EAAA,EAAD,KAAamC,KAMvB,SAASS,EAAUR,GACjB,MAAO,CACLI,GAAG,kBAAD,OAAoBJ,GACtB,gBAAgB,uBAAhB,OAAwCA,IAG5C,OACE,kBAAC5C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIiD,GAAI,GACrB,kBAAC,EAAD,MACA,kBAAChD,EAAA,EAAD,CAAOC,UAAWP,EAAQQ,QACxB,kBAACC,EAAA,EAAD,CACEC,QAAQ,KACRY,MAAO,CAAEG,aAAc,QACvBlB,UAAWP,EAAQuD,OAHrB,uCAOA,kBAACC,EAAA,EAAD,CACElB,MAAOA,EACPmB,SAjDa,SAACC,EAA8BC,GAClDpB,EAASoB,IAiDHC,eAAe,UACfC,UAAU,UACVnD,QAAQ,YACRoD,aAAW,0BACXC,kBAAmB,CAAEzC,MAAO,CAAE0C,WAAY,SAE1C,kBAACC,EAAA,EAAD,eAAK1D,UAAWU,EAAMiD,OAAQC,MAAM,eAAkBd,EAAU,KAChE,kBAACY,EAAA,EAAD,eAAKE,MAAM,SAAYd,EAAU,KACjC,kBAACY,EAAA,EAAD,eAAKE,MAAM,WAAcd,EAAU,KACnC,kBAACY,EAAA,EAAD,eAAKE,MAAM,WAAcd,EAAU,KACnC,kBAACY,EAAA,EAAD,eAAKE,MAAM,UAAad,EAAU,MAEpC,kBAAC,IAAD,CACEe,KAA0B,QAApB5B,EAAMrC,UAAsB,YAAc,IAChD0C,MAAOP,EACP+B,cA7DkB,SAACxB,GACzBN,EAASM,KA8DH,kBAACH,EAAD,CAAUJ,MAAOA,EAAOO,MAAO,GAA/B,sCAGA,kBAACH,EAAD,CAAUJ,MAAOA,EAAOO,MAAO,GAA/B,sCAGA,kBAACH,EAAD,CAAUJ,MAAOA,EAAOO,MAAO,GAA/B,sCAGA,kBAACH,EAAD,CAAUJ,MAAOA,EAAOO,MAAO,GAA/B,sCAGA,kBAACH,EAAD,CAAUJ,MAAOA,EAAOO,MAAO,GAA/B,0C,mGCxEJyB,EAAYC,aAAW,SAAA/B,GAAK,MAAK,CACrCpB,KAAM,CACJoD,QAAS,QAEXC,SAAU,CACRD,QAAS,OACTE,MAAO,OACPC,gBAAiB,OAEnBC,QAAS,CACPJ,QAAS,OACTK,cAAe,SACfH,MAAO,QAETI,QAAS,CACPC,KAAM,YAERC,MAAO,CACLN,MAAO,KAETO,SAAU,CACRT,QAAS,OACTU,WAAY,SACZC,YAAa3C,EAAM4C,QAAQ,GAC3BC,cAAe7C,EAAM4C,QAAQ,IAE/BE,SAAU,CACRC,OAAQ,GACRb,MAAO,IAETc,KAAM,CACJC,WAAY,YAgIDC,EA7HO,SAAC,GAQhB,IAPLC,EAOI,EAPJA,YACAC,EAMI,EANJA,KACAC,EAKI,EALJA,aACAC,EAII,EAJJA,2BAII,IAHJC,KACE9C,EAEE,EAFFA,GAAI+C,EAEF,EAFEA,KAAMC,EAER,EAFQA,MAAOC,EAEf,EAFeA,UAGblG,EAAUsE,IAEVrD,EAAQC,cACRiF,EAAcF,EAAMG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEC,MAAK,GACtD,SAASC,EAAM7D,GACb,OAAO,kBAAC,IAAD,eAAU8D,UAAW,EAAG/F,QAAQ,UAAaiC,IAQtD,SAAS+D,EAAaC,EAAGtF,GACvBsF,EAAEC,iBACF,IAAMC,EAAO,CACXxF,QACAkF,IAAKJ,GAIPW,IAAYC,WAAWF,GAAMG,MAAK,SAAAC,GACb,MAAfA,EAAIC,QACNC,IAAaC,gBAAgBnE,GAAI+D,MAAK,SAAAK,GAChB,MAAhBA,EAAKH,QACPpB,EAA2B7C,SAOrC,OACE,kBAAC9B,EAAA,EAAD,CAAMZ,UAAWP,EAAQoB,MACvB,kBAACkG,EAAA,EAAD,CAAU1B,KAAMA,EAAM2B,iBAAkB,IAAMC,QAAS7B,GACrD,kBAACa,EAAD,CAAOgB,QAAS7B,EAAapF,UAAWU,EAAMwG,KAAMC,SAAS,UAA7D,4BAIF,yBAAKnH,UAAWP,EAAQ4E,SACtB,kBAAClD,EAAA,EAAD,CAAanB,UAAWP,EAAQ8E,SAC9B,kBAACrE,EAAA,EAAD,CAAYkH,UAAU,KAAKjH,QAAQ,MAAnC,SAEG,IACAsF,GAEH,kBAACvF,EAAA,EAAD,CAAYC,QAAQ,YAAYO,MAAM,iBAAtC,QAEG,IACA,IAAI2G,KAAK1B,GAAW2B,UACpB,IAJH,IAMG,IACA,IAAID,KAAK1B,GAAW4B,WAPvB,KAWA,kBAACrH,EAAA,EAAD,CAAYC,QAAQ,YAAYO,MAAM,iBAAtC,OAEG,IACAgF,EAAM8B,OACN9B,EAAM+B,KAAI,SAAA5H,GAAI,OACb,4BACE,4BAAKA,EAAK6F,WANhB,QAUG,IACAE,IAIL,kBAAClG,EAAA,EAAD,CAAMC,WAAS,EAAC+H,aAAa,iBAC3B,kBAACC,EAAA,EAAD,CACEC,QAAS,SAAAxB,GAAC,OAAID,EAAaC,GAAG,IAC9B7C,aAAW,YAEX,kBAAC,IAAD,CAAwBvD,UAAWP,EAAQsF,WAC3C,kBAAC7E,EAAA,EAAD,4BAEF,kBAACyH,EAAA,EAAD,CACEC,QAAS,SAAAxB,GAAC,OAAID,EAAaC,GAAG,IAC9B7C,aAAW,cAEX,kBAAC,IAAD,CAAmBvD,UAAWP,EAAQsF,WACtC,kBAAC7E,EAAA,EAAD,0BAEF,kBAACyH,EAAA,EAAD,CACEC,QAAS,SAAAxB,GAAC,OAhFpB,SAAqBA,GACnBA,EAAEC,iBACFf,EAAa5C,GA8ESmF,CAAYzB,IAC1BpG,UAAWP,EAAQwF,KACnB1B,aAAW,QAEX,kBAAC,IAAD,CAAYvD,UAAWP,EAAQsF,WAC/B,kBAAC7E,EAAA,EAAD,iBAIJ,kBAAC4H,EAAA,EAAD,SCnHOC,EAxCe,SAAC,GAAD,IAC5BtI,EAD4B,EAC5BA,QACAuI,EAF4B,EAE5BA,YACA5C,EAH4B,EAG5BA,YACAE,EAJ4B,EAI5BA,aACAD,EAL4B,EAK5BA,KACAE,EAN4B,EAM5BA,2BAN4B,OAQ5B,kBAAC7F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIiD,GAAI,GACrB,kBAAChD,EAAA,EAAD,CAAOC,UAAWP,EAAQwI,OACxB,kBAAC/H,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWP,EAAQuD,OAA5C,gBAKDgF,GACMA,EAAYP,KAAI,SAAA/B,GAEjB,OACE,kBAAC,EAAD,CACEF,KAAME,EACNL,KAAMA,EACND,YAAaA,EACbE,aAAcA,EACdC,2BAA4BA,SCpBpCxB,EAAYC,aAAW,SAAA/B,GAAK,MAAK,CACrCpB,KAAM,CACJqH,SAAU,GAEZD,MAAO,CACLjH,QAASiB,EAAM4C,QAAQ,GACvBsD,UAAW,SACXzH,MAAOuB,EAAMmG,QAAQC,KAAKC,SAE5BrI,OAAQ,CACNe,QAASiB,EAAM4C,QAAQ,GACvBsD,UAAW,SACXzH,MAAOuB,EAAMmG,QAAQC,KAAKC,QAC1BrE,QAAS,OACTK,cAAe,SACfiE,OAAQ,QAEVvF,MAAO,CACLwF,WAAY,gBAGVC,EAAa,CACjB,CAAE/F,GAAI,IAAKgG,KAAM,SACjB,CAAEhG,GAAI,IAAKgG,KAAM,eACjB,CAAEhG,GAAI,IAAKgG,KAAM,YAEbC,EAAW,CACf,CAAEjG,GAAI,IAAKgG,KAAM,QACjB,CAAEhG,GAAI,IAAKgG,KAAM,mBA+HJE,UA7Hf,WAAsB,IAAD,EACK9G,mBAAS,IADd,mBACZ0D,EADY,KACNqD,EADM,OAEmB/G,mBAAS,IAF5B,mBAEZkG,EAFY,KAECc,EAFD,OAGiBjH,IAAMC,SAAS,KAHhC,mBAGZtB,EAHY,KAGAuI,EAHA,OAIalH,IAAMC,SAAS,GAJ5B,mBAIZkH,EAJY,KAIFC,EAJE,KAQbxJ,EAAUsE,IAqChB,SAASwB,EAA2B7C,GAClCoG,EAAed,EAAYkB,QAAO,SAAArJ,GAAI,OAAIA,EAAK6C,KAAOA,MASxDyG,qBAAU,WAGRvC,IAAawC,aACV3C,MAAK,SAAAC,GACJoC,EAAepC,EAAIlB,SAEpB6D,OAAM,SAAAC,GACDA,GACEA,EAAI3C,OAAS,KACf4C,QAAQC,IAAIF,EAAIG,cAIvB,IArEgB,MAuEK3H,oBAAS,GAvEd,mBAuEZuD,EAvEY,KAuENqE,EAvEM,KAiGnB,OACE,kBAAChK,EAAA,EAAD,CAAMC,WAAS,EAACkF,QAAS,GACvB,kBAAC8E,EAAD,CACElK,QAASA,EACTe,WAAYA,EACZoJ,kBA1EoB,SAAAzG,GAExB,OADA4F,EAAc5F,EAAM0G,OAAO9H,OACnBoB,EAAM0G,OAAO9H,OACnB,IAAK,IAEH,MACF,IAAK,IAvBP+H,EAAkBC,WACftD,MAAK,SAAAC,GACJmC,EAAQnC,EAAIlB,KAAKwE,aAGlBX,OAAM,SAAAC,GACDA,GACEA,EAAI3C,OAAS,KACf4C,QAAQC,IAAI,aAoFhBf,WAAYA,EACZO,SAAUA,EACViB,gBApGkB,SAAA9G,GACtB8F,EAAY9F,EAAM0G,OAAO9H,QAoGrB4G,SAAUA,IAEZ,kBAAC,EAAD,CACElJ,QAASA,EACT+F,KAAMA,EACNhF,WAAYA,IAEd,kBAAC,EAAD,CACEf,QAASA,EACTuI,YAAaA,EACb5C,YA3Cc,SAACjC,EAAO+G,GACX,cAAXA,GAIJR,GAAQ,IAuCJpE,aArCN,SAAsB5C,GACpBkE,IAAaC,gBAAgBnE,GAC1B+D,MAAK,SAAAC,GACe,MAAfA,EAAIC,SACN+C,GAAQ,GACRnE,EAA2B7C,OAG9B2G,OAAM,SAAAC,GACDA,GACEA,EAAI3C,OAAS,KACf4C,QAAQC,IAAIF,EAAIG,aA2BpBpE,KAAMA,EACNE,2BAA4BA","file":"static/js/7.74c0171c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8000';\n// process.env.REACT_APP_NODE_BACKEND_URL\n\nclass BasketballRequest {\n  getToday() {\n    return axios.get(`${API_URL}/basketball/today`, {\n      headers: {\n        'Content-Type': 'application/json',\n        // Authorization: ` Bearer ${window.localStorage.getItem('jwt')}`,\n      },\n    });\n  }\n}\nexport default new BasketballRequest();\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst ADashboardHeader = ({\n  classes,\n}) => (\n  <Grid container direction=\"row\">\n    <Grid item xs={12}>\n      <Paper className={classes.paper1}>\n        <Typography variant=\"h5\">\n          Todos os jogos representados aqui jรก foram analis\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          Pelo senhor Vidal o rei das apostas tugaas\n        </Typography>\n      </Paper>\n    </Grid>\n  </Grid>\n);\n\nADashboardHeader.propType = {\n  classes: PropTypes.object\n};\n\nexport default ADashboardHeader;\n","import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport { Link } from '@reach/router'\nimport { useStylesCard, useStylesColor } from '../style'\n\nconst CustomCard = ({ sportValue }) => {\n  const classes = useStylesCard()\n  const color = useStylesColor()\n  return (\n    <Card\n      className={`${classes.root} ${color.green}`}\n      style={{ padding: '1rem', marginTop: '1rem', marginBottom: '1rem' }}\n    >\n      <CardContent className={classes.cardFather}>\n        <div className={classes.displayTournament}>\n          {/* {Utility.getSportValue(sportValue)} */}\n          <Typography variant=\"overline\" className={color.tGrey}>\n            Nova aposta\n          </Typography>\n        </div>\n        <div className={classes.displayCompetitors}>\n          <p />\n        </div>\n        <div className={classes.displayCompetitors}>\n          {/* <p>\n                        {sportValue === '3' &&\n                            match.awayTeam &&\n                            match.awayTeam.name}\n                        {sportValue === '2' && match.teams.away.name}\n                    </p> */}\n        </div>\n        <div className={classes.buttons}>\n          <Link\n            to=\"/spider/dashboard/custom\"\n            state={{\n              sportValue,\n            }}\n          >\n            <Typography className={color.tOrange}>Create</Typography>\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default CustomCard\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport SwipeableViews from 'react-swipeable-views';\nimport Tabs from '@material-ui/core/Tabs';\nimport { useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Tab from '@material-ui/core/Tab';\nimport CustomCard from '../../../../card/CustomCard';\nimport { useStylesColor } from '../../../../style';\n\nconst AdminToPredictMatches = ({ classes }) => {\n  const [value, setValue] = React.useState(0);\n  const color = useStylesColor();\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n\n  const theme = useTheme();\n  function TabPanel(props: TabPanelProps) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  function a11yProps(index: any) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n  }\n  return (\n    <Grid item xs={12} md={6}>\n      <CustomCard />\n      <Paper className={classes.paper1}>\n        <Typography\n          variant=\"h5\"\n          style={{ marginBottom: '1rem' }}\n          className={classes.title}\n        >\n          Jogos por avaliar apresentados aqui\n        </Typography>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n          TabIndicatorProps={{ style: { background: 'red' } }}\n        >\n          <Tab className={color.tGreen} label=\"Basquetebol\" {...a11yProps(0)} />\n          <Tab label=\"Tenis\" {...a11yProps(1)} />\n          <Tab label=\"Futebol\" {...a11yProps(2)} />\n          <Tab label=\"Basebol\" {...a11yProps(3)} />\n          <Tab label=\"Hoquei\" {...a11yProps(4)} />\n        </Tabs>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0}>\n            Para estriar pรณ meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            Para estriar pรณ meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            Para estriar pรณ meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            Para estriar pรณ meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            Para estriar pรณ meu puto Vidal.\n          </TabPanel>\n        </SwipeableViews>\n        {/*\n                {data && data.map(match => (\n                    <GameCard\n                        key={match.id}\n                        match={match}\n                        sportValue={sportValue}\n                    />\n                ))} */}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default AdminToPredictMatches;\n","import React from 'react';\nimport {\n  Card,\n  IconButton,\n  Typography,\n  makeStyles,\n  CardContent,\n  Snackbar,\n  Divider,\n  Grid,\n} from '@material-ui/core';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport StatRequest from '../../requests/stats';\nimport MatchRequest from '../../requests/matches';\nimport { useStylesColor } from '../style';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  rootTest: {\n    display: 'flex',\n    width: '100%',\n    backgroundColor: 'red',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n  left: {\n    marginLeft: 'auto',\n  },\n}));\nconst PredictedCard = ({\n  handleClose,\n  open,\n  handleDelete,\n  removeAlreadyDataFromState,\n  data: {\n    id, type, match, createdAt\n  },\n}) => {\n  const classes = useStyles();\n  // const theme = useTheme()\n  const color = useStylesColor();\n  const combinedOdd = match.reduce((a, b) => a * b.odd, 1);\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  function handleClick(e) {\n    e.preventDefault();\n    handleDelete(id);\n  }\n\n  function addStatistic(e, green) {\n    e.preventDefault();\n    const body = {\n      green,\n      odd: combinedOdd,\n    };\n    // green ? body.green=true : body.green=false\n    debugger;\n    StatRequest.createStat(body).then(res => {\n      if (res.status === 200) {\n        MatchRequest.deleteMatchById(id).then(resp => {\n          if (resp.status === 200) {\n            removeAlreadyDataFromState(id);\n          }\n        });\n      }\n    });\n  }\n\n  return (\n    <Card className={classes.root}>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} className={color.grey} severity=\"danger\">\n          Successfully deleted :/\n        </Alert>\n      </Snackbar>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            Tipo -\n            {' '}\n            {type}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Dia -\n            {' '}\n            {new Date(createdAt).getDate()}\n            {' '}\n            -\n            {' '}\n            {new Date(createdAt).getHours()}\n            h\n          </Typography>\n\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Qt -\n            {' '}\n            {match.length}\n            {match.map(item => (\n              <ul>\n                <li>{item.match}</li>\n              </ul>\n            ))}\n            Odd -\n            {' '}\n            {combinedOdd}\n          </Typography>\n        </CardContent>\n        {/* <div className={classes.controls}> */}\n        <Grid container alignContent=\"space-between\">\n          <IconButton\n            onClick={e => addStatistic(e, true)}\n            aria-label=\"previous\"\n          >\n            <CheckCircleOutlineIcon className={classes.playIcon} />\n            <Typography>Green confirmation</Typography>\n          </IconButton>\n          <IconButton\n            onClick={e => addStatistic(e, false)}\n            aria-label=\"play/pause\"\n          >\n            <NotInterestedIcon className={classes.playIcon} />\n            <Typography>Red confirmation</Typography>\n          </IconButton>\n          <IconButton\n            onClick={e => handleClick(e)}\n            className={classes.left}\n            aria-label=\"next\"\n          >\n            <DeleteIcon className={classes.playIcon} />\n            <Typography>Delete</Typography>\n          </IconButton>\n        </Grid>\n        {/* </div> */}\n        <Divider />\n      </div>\n    </Card>\n  );\n};\n\nPredictedCard.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  removeAlreadyDataFromState: PropTypes.func.isRequired,\n  data: {\n    id: PropTypes.number.isRequired,\n    type: PropTypes.string.isRequired,\n    match: PropTypes.array.isRequired,\n    createdAt: PropTypes.string.isRequired,\n  },\n};\n\nexport default PredictedCard;\n","import React from 'react';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport PredictedCard from '../../../../card/PredictedCard';\n\nconst AdminPredictedMatches = ({\n  classes,\n  alreadyData,\n  handleClose,\n  handleDelete,\n  open,\n  removeAlreadyDataFromState,\n}) => (\n  <Grid item xs={12} md={6}>\n    <Paper className={classes.paper}>\n      <Typography variant=\"h5\" className={classes.title}>\n        Predictions\n      </Typography>\n    </Paper>\n\n    {alreadyData\n        && alreadyData.map(match => {\n          debugger;\n          return (\n            <PredictedCard\n              data={match}\n              open={open}\n              handleClose={handleClose}\n              handleDelete={handleDelete}\n              removeAlreadyDataFromState={removeAlreadyDataFromState}\n            />\n          );\n        })}\n  </Grid>\n);\n\nAdminPredictedMatches.propTypes = {\n  classes: PropTypes.object.isRequired,\n  alreadyData: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  removeAlreadyDataFromState: PropTypes.func.isRequired,\n};\n\nexport default AdminPredictedMatches;\n","import React, { useEffect, useState } from 'react'\nimport { Grid, makeStyles } from '@material-ui/core'\nimport MatchRequest from '../../../../../requests/matches'\nimport BasketballRequest from '../../../../../requests/node/basketball'\n\nimport AdminDashboardHeader from './AdminDashboardHeader'\nimport AdminToPredictMatches from './AdminToPredictMatches'\nimport AdminPredictedMatches from './AdminPredictedMatches'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n  },\n  paper1: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n  },\n  title: {\n    fontFamily: 'Aclonica',\n  },\n}))\nconst valueSport = [\n  { id: '1', desc: 'Tenis' },\n  { id: '2', desc: 'Basquetebol' },\n  { id: '3', desc: 'Futebol' },\n]\nconst valueDay = [\n  { id: '1', desc: 'Hoje' },\n  { id: '2', desc: 'Proxima semana' },\n]\nfunction DashBoard() {\n  const [data, setData] = useState([])\n  const [alreadyData, setAlreadyData] = useState([])\n  const [sportValue, setSportValue] = React.useState('3')\n  const [dayValue, setDayValue] = React.useState(1)\n  const handleDayChange = event => {\n    setDayValue(event.target.value)\n  }\n  const classes = useStyles()\n\n  function loadBasketBallGames() {\n    BasketballRequest.getToday()\n      .then(res => {\n        setData(res.data.response)\n        // setChange(true)\n      })\n      .catch(err => {\n        if (err) {\n          if (err.status > 400) {\n            console.log('Erro')\n          }\n        }\n      })\n  }\n\n  /* function loadFootBallGames() {\n        soccer()\n    } */\n  const handleSportChange = event => {\n    setSportValue(event.target.value)\n    switch (event.target.value) {\n      case '1':\n        // loadTennisGames()\n        break\n      case '2':\n        loadBasketBallGames()\n        break\n      case '3':\n        // loadFootBallGames()\n        break\n      default:\n        break\n    }\n  }\n\n  function removeAlreadyDataFromState(id) {\n    setAlreadyData(alreadyData.filter(item => item.id !== id))\n  }\n  /* function soccer() {\n        SoccerRequest.getToday().then(res => {\n            if (res.status === 200) setData(res.data.matches)\n        }).catch(err => {\n            navigate('/login')\n        })\n    } */\n  useEffect(() => {\n    // soccer()\n\n    MatchRequest.getMatches()\n      .then(res => {\n        setAlreadyData(res.data)\n      })\n      .catch(err => {\n        if (err) {\n          if (err.status > 400) {\n            console.log(err.message)\n          }\n        }\n      })\n  }, [])\n\n  const [open, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n  function handleDelete(id) {\n    MatchRequest.deleteMatchById(id)\n      .then(res => {\n        if (res.status === 200) {\n          setOpen(true)\n          removeAlreadyDataFromState(id)\n        }\n      })\n      .catch(err => {\n        if (err) {\n          if (err.status > 400) {\n            console.log(err.message)\n          }\n        }\n      })\n  }\n\n  return (\n    <Grid container spacing={1}>\n      <AdminDashboardHeader\n        classes={classes}\n        sportValue={sportValue}\n        handleSportChange={handleSportChange}\n        valueSport={valueSport}\n        dayValue={dayValue}\n        handleDayChange={handleDayChange}\n        valueDay={valueDay}\n      />\n      <AdminToPredictMatches\n        classes={classes}\n        data={data}\n        sportValue={sportValue}\n      />\n      <AdminPredictedMatches\n        classes={classes}\n        alreadyData={alreadyData}\n        handleClose={handleClose}\n        handleDelete={handleDelete}\n        open={open}\n        removeAlreadyDataFromState={removeAlreadyDataFromState}\n      />\n    </Grid>\n  )\n}\n\nexport default DashBoard\n"],"sourceRoot":""}