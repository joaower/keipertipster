{"version":3,"sources":["util/utility.js","requests/node/soccer.js","requests/node/basketball.js","components/Betting/adminDashboard/Forecast/ForecastDashboard/AdminDashboardHeader.jsx","components/card/CustomCard.jsx","components/card/GameCard.jsx","components/Betting/adminDashboard/Forecast/ForecastDashboard/AdminToPredictMatches.jsx","components/card/PredictedCard.jsx","components/Betting/adminDashboard/Forecast/ForecastDashboard/AdminPredictedMatches.jsx","components/Betting/adminDashboard/Forecast/ForecastDashboard/aDashboard.js"],"names":["Utility","sportValue","typeValue","riskValue","axios","get","headers","Authorization","window","localStorage","getItem","ADashboardHeader","classes","handleSportChange","valueSport","dayValue","handleDayChange","valueDay","Grid","container","direction","item","xs","Paper","className","paper1","Typography","variant","CustomCard","React","memo","match","useStylesCard","console","log","Card","root","CardContent","cardFather","displayTournament","competition","name","league","area","code","type","displayCompetitors","homeTeam","teams","home","awayTeam","away","buttons","to","id","state","Button","prevProps","nextProps","color","useStylesColor","green","style","padding","marginTop","marginBottom","tGrey","tOrange","AdminToPredictMatches","data","useState","value","setValue","theme","useTheme","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","md","title","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","TabIndicatorProps","background","Tab","tGreen","label","axis","onChangeIndex","useStyles","makeStyles","display","rootTest","width","backgroundColor","details","flexDirection","content","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","left","marginLeft","PredictedCard","handleClose","open","handleDelete","removeAlreadyDataFromState","createdAt","combinedOdd","reduce","a","b","odd","addStatistic","e","preventDefault","body","StatRequest","createStat","then","res","status","MatchRequest","deleteMatchById","resp","Snackbar","autoHideDuration","onClose","elevation","severity","component","Date","getDate","getHours","length","map","alignContent","IconButton","onClick","handleClick","Divider","AdminPredictedMatches","alreadyData","paper","flexGrow","textAlign","palette","text","primary","margin","fontFamily","desc","DashBoard","setData","setAlreadyData","setSportValue","setDayValue","useEffect","getMatches","catch","err","setOpen","filter","AdminDashboardHeader","target","BasketballRequest","getToday","response","reason"],"mappings":"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","file":"static/js/8.b4d91143.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'http://localhost:1337'\n\nclass Utility {\n  getSportValue(sportValue) {\n    switch (sportValue) {\n      case '1':\n        return 'Tenis'\n      case '2':\n        return 'Basketball'\n      case '3':\n        return 'Soccer'\n      default:\n        return 'default'\n    }\n  }\n\n  getTypeValue(typeValue) {\n    switch (typeValue) {\n      case '1':\n        return 'Simples'\n      case '2':\n        return 'Combinada'\n      default:\n        return 'default'\n    }\n  }\n\n  getRiskValue(riskValue) {\n    switch (riskValue) {\n      case '1':\n        return 'Valor'\n      case '2':\n        return 'Garantida'\n      default:\n        return 'default'\n    }\n  }\n}\nexport default new Utility()\n","import axios from 'axios'\n\nconst API_URL = 'http://localhost:8000'\n\nclass SoccerRequest {\n  getToday() {\n    return axios.get(`${API_URL}/soccer/today`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: ` Bearer ${window.localStorage.getItem('jwt')}`,\n      },\n    })\n  }\n}\nexport default new SoccerRequest()\n","import axios from 'axios'\n\nconst API_URL = 'http://localhost:8000'\n// process.env.REACT_APP_NODE_BACKEND_URL\n\nclass BasketballRequest {\n  getToday() {\n    return axios.get(`${API_URL}/basketball/today`, {\n      headers: {\n        'Content-Type': 'application/json',\n        // Authorization: ` Bearer ${window.localStorage.getItem('jwt')}`,\n      },\n    })\n  }\n}\nexport default new BasketballRequest()\n","import React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport Selector from \"../../../../Material-Ui/Selector\";\n\nconst ADashboardHeader = ({\n  classes,\n  sportValue,\n  handleSportChange,\n  valueSport,\n  dayValue,\n  handleDayChange,\n  valueDay,\n}) => {\n  return (\n    <Grid container direction=\"row\">\n      <Grid item xs={12}>\n        <Paper className={classes.paper1}>\n          <Typography variant=\"h5\">\n            Todos os jogos representados aqui já foram analis\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            Pelo senhor Vidal o rei das apostas tugaas\n          </Typography>\n        </Paper>\n      </Grid>\n      {/* <Grid item xs={12}>\n        <Paper\n          className={classes.paper}\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Selector\n            key=\"1\"\n            value={sportValue}\n            handleChange={handleSportChange}\n            type=\"Desporto\"\n            valueArray={valueSport}\n            helpText=\"Escolhe o tipo de desporto\"\n          />\n          <Selector\n            value={dayValue}\n            handleChange={handleDayChange}\n            key=\"2\"\n            type=\"Dia\"\n            valueArray={valueDay}\n            helpText=\"Escolhe o dia\"\n          />\n        </Paper>\n      </Grid> */}\n    </Grid>\n  );\n};\n\nexport default ADashboardHeader;\n","import React from \"react\";\nimport { Card, CardContent, Button, Typography } from \"@material-ui/core\";\nimport { Link } from \"@reach/router\";\nimport { useStylesCard, useStylesColor } from \"../style\";\nimport Utility from \"../../util/utility\";\n\nconst CustomCard = ({ sportValue }) => {\n  const classes = useStylesCard();\n  const color = useStylesColor()\n  return (\n    <Card className={`${classes.root} ${color.green}`} style={{padding: '1rem', marginTop: '1rem', marginBottom: '1rem'}}>\n      <CardContent className={classes.cardFather}>\n        <div className={classes.displayTournament}>\n          {/* {Utility.getSportValue(sportValue)} */}\n          <Typography className={color.tGrey}>New pick</Typography>\n        </div>\n        <div className={classes.displayCompetitors}>\n          <p></p>\n        </div>\n        <div className={classes.displayCompetitors}>\n          {/* <p>\n                        {sportValue === '3' &&\n                            match.awayTeam &&\n                            match.awayTeam.name}\n                        {sportValue === '2' && match.teams.away.name}\n                    </p> */}\n        </div>\n        <div className={classes.buttons}>\n          <Link\n            to={`/spider/dashboard/custom`}\n            state={{\n              sportValue,\n            }}\n          >\n            <Button className={color.tOrange}>Create</Button>\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CustomCard;\n","import React from 'react'\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Button,\r\n} from '@material-ui/core'\r\nimport { Link } from '@reach/router'\r\nimport { useStylesCard } from '../style'\r\n\r\nconst comparator = (prevProps, nextProps) => {\r\n    // if(prevProps.sportValue!==nextProps.sportValue) return false\r\n    if (\r\n        prevProps.match.id !== nextProps.match.id &&\r\n        prevProps.sportValue === nextProps.sportValue\r\n    )\r\n        return false\r\n    /* if (prevProps.isLoggedIn !== nextProps.setProps.isLoggedIn) {\r\n        return true\r\n    }\r\n    if (prevProps.route !== nextProps.setProps.route) {\r\n        return true\r\n    }\r\n    if (prevProps.anchorText !== nextProps.setProps.anchorText) {\r\n        return true\r\n    } */\r\n    return true\r\n}\r\n\r\nconst GameCard = React.memo(({ match, sportValue }) => {\r\n    const classes = useStylesCard()\r\n    console.log(match)\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent className={classes.cardFather}>\r\n                <div className={classes.displayTournament}>\r\n                    <p>\r\n                        {sportValue === '3' && match.competition.name}\r\n                        {sportValue === '2' && match.league.name}\r\n                    </p>\r\n                    <p>\r\n                        {sportValue === '3' && match.competition.area.code}\r\n                        {sportValue === '2' && match.league.type}\r\n                    </p>\r\n                    {/* <p>{tournament}</p> */}\r\n                </div>\r\n                {/* {competitors.map(competitors => (\r\n                    <div className={classes.displayCompetitors}>\r\n                        <p>Desportista</p>\r\n                        <p>{competitors.name}</p>\r\n                    </div>\r\n                ))} */}\r\n                <div className={classes.displayCompetitors}>\r\n                    <p>\r\n                        {sportValue === '3' &&\r\n                            match.homeTeam &&\r\n                            match.homeTeam.name}\r\n                        {sportValue === '2' && match.teams.home.name}\r\n                    </p>\r\n                </div>\r\n                <div className={classes.displayCompetitors}>\r\n                    <p>\r\n                        {sportValue === '3' &&\r\n                            match.awayTeam &&\r\n                            match.awayTeam.name}\r\n                        {sportValue === '2' && match.teams.away.name}\r\n                    </p>\r\n                </div>\r\n                <div className={classes.buttons}>\r\n                    {sportValue === '3' && (\r\n                        <Link\r\n                            to={`/spider/dashboard/${match.id}`}\r\n                            state={{\r\n                                competition: match.competition,\r\n                                homeTeam: match.homeTeam,\r\n                                awayTeam: match.awayTeam,\r\n                                sportValue,\r\n                            }}\r\n                        >\r\n                            <Button>Edit</Button>\r\n                        </Link>\r\n                    )}\r\n                    {sportValue === '2' && (\r\n                        <Link\r\n                            to={`/spider/dashboard/${match.id}`}\r\n                            state={{\r\n                                competition: match.league,\r\n                                homeTeam: match.teams.home,\r\n                                awayTeam: match.teams.away,\r\n                                sportValue,\r\n                            }}\r\n                        >\r\n                            <Button>Edit</Button>\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}, comparator)\r\n\r\nexport default GameCard\r\n","import React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport GameCard from \"../../../../card/GameCard\";\nimport CustomCard from \"../../../../card/CustomCard\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useStylesColor } from \"../../../../style\";\nconst AdminToPredictMatches = ({ classes, data, sportValue }) => {\n  const [value, setValue] = React.useState(0);\n  const color=useStylesColor()\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n\n  const theme = useTheme();\n  function TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  function a11yProps(index: any) {\n    return {\n      id: `full-width-tab-${index}`,\n      \"aria-controls\": `full-width-tabpanel-${index}`,\n    };\n  }\n  return (\n    <Grid item xs={12} md={6}>\n        <CustomCard  />\n      <Paper className={classes.paper1}>\n        <Typography variant=\"h5\" style={{marginBottom: '1rem'}} className={classes.title}>\n          Jogos por avaliar apresentados aqui\n        </Typography>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n          TabIndicatorProps={{style: {background:'red'}}}\n        >\n          <Tab className={color.tGreen} label=\"Basquetebol\" {...a11yProps(0)} />\n          <Tab label=\"Tenis\" {...a11yProps(1)} />\n          <Tab label=\"Futebol\" {...a11yProps(2)} />\n          <Tab label=\"Basebol\" {...a11yProps(3)} />\n          <Tab label=\"Hoquei\" {...a11yProps(4)} />\n        </Tabs>\n        <SwipeableViews\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n          index={value}\n          onChangeIndex={handleChangeIndex}\n        >\n          <TabPanel value={value} index={0}>\n            Para estriar pó meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            Para estriar pó meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            Para estriar pó meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            Para estriar pó meu puto Vidal.\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            Para estriar pó meu puto Vidal.\n          </TabPanel>\n        </SwipeableViews>\n        {/* \n                {data && data.map(match => (\n                    <GameCard\n                        key={match.id}\n                        match={match}\n                        sportValue={sportValue}\n                    />\n                ))} */}\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default AdminToPredictMatches;\n","import React from 'react'\nimport {\n    Card,\n    useTheme,\n    IconButton,\n    Typography,\n    makeStyles,\n    CardContent,\n    Snackbar,\n    Divider,\n    Grid,\n} from '@material-ui/core'\nimport NotInterestedIcon from '@material-ui/icons/NotInterested'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport StatRequest from '../../requests/stats'\nimport MatchRequest from '../../requests/matches'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    \n    },\n    rootTest: {\n        display: 'flex',\n        width: '100%',\n        backgroundColor: 'red'\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%'\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        width: 151,\n    },\n    controls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    playIcon: {\n        height: 38,\n        width: 38,\n    },\n    left: {\n        marginLeft: 'auto',\n    },\n}))\nconst PredictedCard = ({\n    handleClose,\n    open,\n    handleDelete,\n    removeAlreadyDataFromState,\n    data: { id, type, match, createdAt },\n}) => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const combinedOdd = match.reduce((a,b) => a * b.odd, 1)\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n    }\n\n    function handleClick(e) {\n        e.preventDefault()\n        handleDelete(id)\n    }\n\n    function addStatistic(e, green) {\n        e.preventDefault()\n        let body = {\n            green,\n            odd: combinedOdd\n        }\n        // green ? body.green=true : body.green=false\n        debugger\n        StatRequest.createStat(body).then(res => {\n            if(res.status===200) {\n                MatchRequest.deleteMatchById(id).then(resp => {\n                    if(resp.status===200) {\n                        removeAlreadyDataFromState(id)\n                    }\n                })\n            }\n        })\n    } \n\n    return (\n        <Card  className={classes.root} >\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"danger\">\n                    Successfully deleted :/\n                </Alert>\n            </Snackbar>\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        Tipo - {type}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Dia - {new Date(createdAt).getDate()} - {new Date(createdAt).getHours()}h\n                    </Typography>\n\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Qt - {match.length}\n                        {match.map(item => <ul><li>{item.match}</li></ul>)}\n                        Odd - {combinedOdd}\n                    </Typography>\n                </CardContent>\n                {/* <div className={classes.controls}> */}\n                <Grid container alignContent=\"space-between\">\n\n                    <IconButton onClick={ (e) => addStatistic(e, true) } aria-label=\"previous\">\n                        <CheckCircleOutlineIcon className={classes.playIcon} />\n                        <Typography>Green confirmation</Typography>\n\n                    </IconButton>\n                    <IconButton onClick={(e) => addStatistic(e, false)} aria-label=\"play/pause\">\n                        <NotInterestedIcon className={classes.playIcon} />\n                        <Typography>Red confirmation</Typography>\n\n                    </IconButton>\n                    <IconButton\n                        onClick={e => handleClick(e)}\n                        className={classes.left}\n                        aria-label=\"next\"\n                        >\n                        <DeleteIcon className={classes.playIcon} />\n                        <Typography>Delete</Typography>\n                    </IconButton>\n            </Grid>\n                {/* </div> */}\n                <Divider />\n            </div>\n        </Card>\n    )\n}\n\nexport default PredictedCard\n","import React from 'react'\nimport { Grid, Paper, Typography } from '@material-ui/core'\nimport PredictedCard from '../../../../card/PredictedCard'\n\nconst AdminPredictedMatches = ({classes, alreadyData, handleClose, handleDelete, open, removeAlreadyDataFromState}) => {\n    return (\n        <Grid item xs={12} md={6} >\n            <Paper className={classes.paper}>\n                <Typography variant=\"h5\" className={classes.title}>\n                    Predictions\n                </Typography>\n            </Paper>\n\n            {alreadyData &&\n                alreadyData.map(match => {\n                    debugger\n                    return (\n                        <PredictedCard\n                            data={match}\n                            open={open}\n                            handleClose={handleClose}\n                            handleDelete={handleDelete}\n                            removeAlreadyDataFromState={\n                                removeAlreadyDataFromState\n                            }\n                        />\n                    )\n                })}\n        </Grid>\n    )\n}\n\nexport default AdminPredictedMatches\n","import React, { useEffect, useState } from 'react'\nimport { Grid, makeStyles } from '@material-ui/core'\nimport { navigate } from '@reach/router'\nimport SoccerRequest from '../../../../../requests/node/soccer'\nimport MatchRequest from '../../../../../requests/matches'\nimport BasketballRequest from '../../../../../requests/node/basketball'\n\nimport AdminDashboardHeader from './AdminDashboardHeader'\nimport AdminToPredictMatches from './AdminToPredictMatches'\nimport AdminPredictedMatches from './AdminPredictedMatches'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n  },\n  paper1: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n  },\n  title: {\n    fontFamily: 'Aclonica',\n  },\n}))\nconst valueSport = [\n  { id: '1', desc: 'Tenis' },\n  { id: '2', desc: 'Basquetebol' },\n  { id: '3', desc: 'Futebol' },\n]\nconst valueDay = [\n  { id: '1', desc: 'Hoje' },\n  { id: '2', desc: 'Proxima semana' },\n]\nfunction DashBoard() {\n  const [data, setData] = useState([])\n  const [alreadyData, setAlreadyData] = useState([])\n  const [sportValue, setSportValue] = React.useState('3')\n  const [dayValue, setDayValue] = React.useState(1)\n  const handleDayChange = event => {\n    setDayValue(event.target.value)\n  }\n  const classes = useStyles()\n\n  function loadBasketBallGames() {\n    BasketballRequest.getToday()\n      .then(res => {\n        console.log(res.data.response)\n        setData(res.data.response)\n        // setChange(true)\n      })\n      .catch(err => {\n        debugger\n      })\n  }\n\n  /* function loadFootBallGames() {\n        soccer()\n    } */\n  const handleSportChange = event => {\n    setSportValue(event.target.value)\n    switch (event.target.value) {\n      case '1':\n        // loadTennisGames()\n        break\n      case '2':\n        loadBasketBallGames()\n        break\n      case '3':\n        // loadFootBallGames()\n        break\n      default:\n        console.log('Choose a sport')\n    }\n  }\n  /* function soccer() {\n        SoccerRequest.getToday().then(res => {\n            if (res.status === 200) setData(res.data.matches)\n        }).catch(err => {\n            navigate('/login')\n        })\n    } */\n  useEffect(() => {\n    // soccer()\n\n    MatchRequest.getMatches()\n      .then(res => {\n        setAlreadyData(res.data)\n        debugger\n      })\n      .catch(err => {\n        debugger\n      })\n  }, [])\n\n  const [open, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n  function handleDelete(id) {\n    MatchRequest.deleteMatchById(id).then(res => {\n      if (res.status === 200) {\n        setOpen(true)\n        removeAlreadyDataFromState(id)\n      }\n    })\n  }\n\n  function removeAlreadyDataFromState(id) {\n    setAlreadyData(alreadyData.filter(item => item.id !== id))\n  }\n  return (\n    <Grid container spacing={1}>\n      <AdminDashboardHeader\n        classes={classes}\n        sportValue={sportValue}\n        handleSportChange={handleSportChange}\n        valueSport={valueSport}\n        dayValue={dayValue}\n        handleDayChange={handleDayChange}\n        valueDay={valueDay}\n      />\n      <AdminToPredictMatches\n        classes={classes}\n        data={data}\n        sportValue={sportValue}\n      />\n      <AdminPredictedMatches\n        classes={classes}\n        alreadyData={alreadyData}\n        handleClose={handleClose}\n        handleDelete={handleDelete}\n        open={open}\n        removeAlreadyDataFromState={removeAlreadyDataFromState}\n      />\n    </Grid>\n  )\n}\n\nexport default DashBoard\n"],"sourceRoot":""}