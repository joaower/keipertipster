{"version":3,"sources":["util/utility.js","components/Betting/adminDashboard/Forecast/Prediction.jsx","../node_modules/@material-ui/icons/SportsSoccer.js","../node_modules/@material-ui/icons/AddCircle.js","components/RedirectPage.jsx","components/Betting/adminDashboard/Forecast/AdminSingularPrediction.js"],"names":["Utility","sportValue","typeValue","riskValue","useStyles","makeStyles","theme","bold","fontWeight","dNone","display","icon","color","fontSize","marginTop","marginLeft","cursor","pointerEvents","Prediction","handleClose","props","winner","setWinner","difficulty","setDifficulty","setOdd","imageUrl","uploadFile","setDescription","save","open","location","state","homeTeam","awayTeam","competition","classes","autoHideDuration","onClose","elevation","variant","severity","className","paragraph","container","direction","item","xs","align","name","flexDirection","sm","fullWidth","id","labelId","value","onChange","e","target","label","type","InputLabelProps","shrink","src","component","placeholder","multiline","rows","rowsMax","onClick","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","RedirectPage","AdminSingularPrediction","useState","odd","description","file","setFile","setOpen","setImageUrl","event","reason","undefined","files","reader","FileReader","onloadend","result","readAsDataURL","body","Title","Prevision","Difficulty","Odd","Description","Sport","getSportValue","Winner","Proof","MatchRequest","createMatch","then","res","console","log","setTimeout","navigate","catch","err"],"mappings":"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","file":"static/js/6.f72015d8.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_URL = 'http://localhost:1337'\n\nclass Utility {\n  getSportValue(sportValue) {\n    switch (sportValue) {\n      case '1':\n        return 'Tenis'\n      case '2':\n        return 'Basketball'\n      case '3':\n        return 'Soccer'\n      default:\n        return 'default'\n    }\n  }\n\n  getTypeValue(typeValue) {\n    switch (typeValue) {\n      case '1':\n        return 'Simples'\n      case '2':\n        return 'Combinada'\n      default:\n        return 'default'\n    }\n  }\n\n  getRiskValue(riskValue) {\n    switch (riskValue) {\n      case '1':\n        return 'Valor'\n      case '2':\n        return 'Garantida'\n      default:\n        return 'default'\n    }\n  }\n}\nexport default new Utility()\n","import React from 'react'\nimport {\n    Snackbar,\n    Grid,\n    FormControl,\n    Typography,\n    MenuItem,\n    InputLabel,\n    Select,\n    Button,\n    makeStyles,\n} from '@material-ui/core'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport { CssTextField } from '../../../Material-Ui/CssTextField'\n\nconst useStyles = makeStyles(theme => ({\n    bold: {\n        fontWeight: 'bold',\n    },\n    dNone: {\n        display: 'none',\n    },\n    icon: {\n        color: '#013328',\n        fontSize: '5rem',\n        marginTop: 'auto',\n        marginLeft: 'auto',\n        cursor: 'pointer',\n        pointerEvents: 'auto',\n    },\n}))\nconst Prediction = ({\n    handleClose,\n    props,\n    winner,\n    setWinner,\n    difficulty,\n    setDifficulty,\n    setOdd,\n    imageUrl,\n    uploadFile,\n    setDescription,\n    save,\n    open,\n}) => {\n    const { homeTeam, awayTeam, competition } = props.location.state\n    const classes = useStyles()\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n    }\n    return (\n        <div>\n            \n            <div>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                >\n                    <Alert onClose={handleClose} severity=\"success\">\n                        You just updated one more green :)\n                        <Typography className={classes.bold} paragraph>\n                            redirecting...\n                        </Typography>\n                    </Alert>\n                </Snackbar>\n                <Grid container direction=\"row\">\n                    <Grid item xs={12}>\n                        <Typography align=\"center\" paragraph>\n                            {`${homeTeam.name} - ${awayTeam.name}`}\n                            <br />\n                            dd/mm - hh/mm\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        direction=\"row\"\n                        xs={12}\n                    >\n                        <SportsSoccerIcon />\n                        <Typography align=\"center\" paragraph>\n                            {`Competition: ${competition.name}`}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </div>\n            <Grid container flexDirection=\"column\">\n                <Grid direction=\"row\" item xs={12}>\n                    <Typography align=\"center\" variant=\"h4\">\n                        Analise\n                    </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Winner\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={winner}\n                            onChange={e => setWinner(e.target.value)}\n                        >\n                            <MenuItem value=\"House\">{homeTeam.name}</MenuItem>\n                            <MenuItem value=\"Tie\">Tie</MenuItem>\n                            <MenuItem value=\"Outside\">{awayTeam.name}</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6} >\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Difficulty\n                        </InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={difficulty}\n                            onChange={e => setDifficulty(e.target.value)}\n                        >\n                            <MenuItem value=\"Easy\">Easy</MenuItem>\n                            <MenuItem value=\"Medium\">Medium</MenuItem>\n                            <MenuItem value=\"Hard\">Hard</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={4}>\n                    <CssTextField\n                        id=\"standard-number\"\n                        label=\"Odd\"\n                        fullWidth\n                        type=\"number\"\n                        onChange={e => setOdd(e.target.value)}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <img src={imageUrl} />\n                    <Button fullWidth variant=\"contained\" component=\"label\">\n                        Upload Proof\n                        <input\n                            type=\"file\"\n                            className={classes.dNone}\n                            onChange={uploadFile}\n                        />\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" align=\"center\">\n                        Description\n                    </Typography>\n                    <CssTextField\n                        placeholder=\"\"\n                        multiline\n                        fullWidth\n                        rows={2}\n                        rowsMax={4}\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                </Grid>\n\n                <AddCircleIcon\n                    className={classes.icon}\n                    onClick={save}\n                />\n            </Grid>\n        </div>\n    )\n}\n\nexport default Prediction\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 3.3l1.35-.95c1.82.56 3.37 1.76 4.38 3.34l-.39 1.34-1.35.46L13 6.7V5.3zm-3.35-.95L11 5.3v1.4L7.01 9.49l-1.35-.46-.39-1.34c1.01-1.57 2.56-2.77 4.38-3.34zM7.08 17.11l-1.14.1C4.73 15.81 4 13.99 4 12c0-.12.01-.23.02-.35l1-.73 1.38.48 1.46 4.34-.78 1.37zm7.42 2.48c-.79.26-1.63.41-2.5.41s-1.71-.15-2.5-.41l-.69-1.49.64-1.1h5.11l.64 1.11-.7 1.48zM14.27 15H9.73l-1.35-4.02L12 8.44l3.63 2.54L14.27 15zm3.79 2.21l-1.14-.1-.79-1.37 1.46-4.34 1.39-.47 1 .73c.01.11.02.22.02.34 0 1.99-.73 3.81-1.94 5.21z\"\n}), 'SportsSoccer');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","import React from 'react'\nimport { Button } from '@material-ui/core'\n\nconst RedirectPage = () => {\n    return (\n        <div>\n            <h1>\n                {' '}\n                we had some problem loading this page please click the button to\n                be redirected\n            </h1>\n            <Button variant=\"contained\">Click here</Button>\n        </div>\n    )\n}\n\nexport default RedirectPage\n","import React, { useState } from 'react'\nimport { navigate } from '@reach/router'\nimport MatchRequest from '../../../../requests/matches'\nimport Utility from '../../../../util/utility'\nimport Prediction from './Prediction'\nimport RedirectPage from '../../../RedirectPage'\nfunction AdminSingularPrediction(props) {\n  const [winner, setWinner] = useState('')\n  const [difficulty, setDifficulty] = useState('')\n  const [odd, setOdd] = useState(0)\n  const [description, setDescription] = useState('')\n  const [file, setFile] = useState({})\n  const [open, setOpen] = useState(false)\n  const [imageUrl, setImageUrl] = useState('')\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  function save() {\n    const body = {\n      Title: `${props.location.state.homeTeam.name} - ${props.location.state.awayTeam.name}`,\n      Prevision: false,\n      Difficulty: difficulty,\n      Odd: odd,\n      Description: description,\n      Sport: Utility.getSportValue(props.location.state.sportValue),\n      Winner: winner,\n      Proof: file,\n    }\n    debugger\n    MatchRequest.createMatch(body)\n      .then(res => {\n        console.log(res)\n        setOpen(true)\n        setTimeout(() => navigate('/spider/dashboard'), 4000)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const uploadFile = e => {\n    let file\n    if (e.target.files !== undefined) {\n      file = e.target.files[0]\n      const reader = new FileReader()\n\n      reader.onloadend = () => {\n        setImageUrl(reader.result)\n      }\n      if (file) {\n        reader.readAsDataURL(file)\n        setImageUrl(reader.result)\n      } else {\n        setImageUrl('')\n      }\n      setFile(file)\n    }\n  }\n\n  return (\n    <>\n      {props.location.state !== null ? (\n        <Prediction\n          props={props}\n          handleClose={handleClose}\n          winner={winner}\n          setWinner={setWinner}\n          difficulty={difficulty}\n          setDifficulty={setDifficulty}\n          setOdd={setOdd}\n          imageUrl={imageUrl}\n          uploadFile={uploadFile}\n          setDescription={setDescription}\n          save={save}\n          open={open}\n        />\n      ) : (\n        <RedirectPage />\n      )}\n    </>\n  )\n}\n\nexport default AdminSingularPrediction\n"],"sourceRoot":""}